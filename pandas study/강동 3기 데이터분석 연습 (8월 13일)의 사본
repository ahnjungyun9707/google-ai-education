{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"184_wYgVl6iMiVkVqCae9tdigEyE2Kx_K","timestamp":1723535291182},{"file_id":"1z8JDdJtbhI2HBl6Gj2_I9NOqaSo-j9bu","timestamp":1723533940166}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 한글 폰트"],"metadata":{"id":"Caiap0e_NyEv"}},{"cell_type":"code","source":["!sudo apt-get install -y fonts-nanum\n","!sudo fc-cache -fv\n","!rm ~/.cache/matplotlib -rf"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Qsj_kolzJLp8","executionInfo":{"status":"ok","timestamp":1723536233710,"user_tz":-540,"elapsed":11543,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"9d684328-0f3e-4f8b-b07c-3f406ca50749"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","The following NEW packages will be installed:\n","  fonts-nanum\n","0 upgraded, 1 newly installed, 0 to remove and 45 not upgraded.\n","Need to get 10.3 MB of archives.\n","After this operation, 34.1 MB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu jammy/universe amd64 fonts-nanum all 20200506-1 [10.3 MB]\n","Fetched 10.3 MB in 2s (5,761 kB/s)\n","debconf: unable to initialize frontend: Dialog\n","debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 78, <> line 1.)\n","debconf: falling back to frontend: Readline\n","debconf: unable to initialize frontend: Readline\n","debconf: (This frontend requires a controlling tty.)\n","debconf: falling back to frontend: Teletype\n","dpkg-preconfigure: unable to re-open stdin: \n","Selecting previously unselected package fonts-nanum.\n","(Reading database ... 123594 files and directories currently installed.)\n","Preparing to unpack .../fonts-nanum_20200506-1_all.deb ...\n","Unpacking fonts-nanum (20200506-1) ...\n","Setting up fonts-nanum (20200506-1) ...\n","Processing triggers for fontconfig (2.13.1-4.2ubuntu5) ...\n","/usr/share/fonts: caching, new cache contents: 0 fonts, 1 dirs\n","/usr/share/fonts/truetype: caching, new cache contents: 0 fonts, 3 dirs\n","/usr/share/fonts/truetype/humor-sans: caching, new cache contents: 1 fonts, 0 dirs\n","/usr/share/fonts/truetype/liberation: caching, new cache contents: 16 fonts, 0 dirs\n","/usr/share/fonts/truetype/nanum: caching, new cache contents: 12 fonts, 0 dirs\n","/usr/local/share/fonts: caching, new cache contents: 0 fonts, 0 dirs\n","/root/.local/share/fonts: skipping, no such directory\n","/root/.fonts: skipping, no such directory\n","/usr/share/fonts/truetype: skipping, looped directory detected\n","/usr/share/fonts/truetype/humor-sans: skipping, looped directory detected\n","/usr/share/fonts/truetype/liberation: skipping, looped directory detected\n","/usr/share/fonts/truetype/nanum: skipping, looped directory detected\n","/var/cache/fontconfig: cleaning cache directory\n","/root/.cache/fontconfig: not cleaning non-existent cache directory\n","/root/.fontconfig: not cleaning non-existent cache directory\n","fc-cache: succeeded\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","plt.rc('font', family='NanumBarunGothic')\n","plt.rcParams['axes.unicode_minus'] =False"],"metadata":{"id":"ubgWhVweJOhY","executionInfo":{"status":"ok","timestamp":1723536233711,"user_tz":-540,"elapsed":2,"user":{"displayName":"안정윤","userId":"15073123616001155353"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E3-QZssKxPeI","executionInfo":{"status":"ok","timestamp":1723536331368,"user_tz":-540,"elapsed":15941,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"52bd8019-7cc6-44f8-e361-8e6b4919a0fe"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["# 전력소비"],"metadata":{"id":"rtJt9CpZN6Nd"}},{"cell_type":"code","source":["import warnings\n","import pandas as pd\n","\n","# 오류 경고 무시 방법\n","warnings.filterwarnings(action='ignore') # https://remake.tistory.com/30\n","\n","file_path = '/content/drive/MyDrive/OECD 주요국의 1인당 전력소비량.xlsx'\n","\n","oecd_data = pd.read_excel(file_path, header = 2)\n","\n","oecd_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"sfCJhbQCaSeD","executionInfo":{"status":"ok","timestamp":1723536347975,"user_tz":-540,"elapsed":1266,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"c6bf4a95-21d2-4ea0-f791-2af71717b961"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Unnamed: 0   2001   2002   2003   2004   2005   2006   2007   2008   2009  \\\n","0         영국  6,192  6,158  6,231  6,206  6,254  6,192  6,142  6,067  5,693   \n","1       이탈리아  5,318  5,447  5,576  5,644  5,676  5,762  5,718  5,656  5,271   \n","2         독일  6,806  6,742  6,898  7,030  7,111  7,175  7,185  7,148  6,781   \n","3        프랑스  7,402  7,366  7,624  7,689  7,707  7,585  7,573  7,703  7,494   \n","4         일본  7,907  8,220  7,816  8,076  8,233  8,220  8,475  8,072  7,833   \n","\n","    2010   2011   2012   2013   2014   2015   2016   2017   2018   2019  \n","0  5,741  5,518  5,452  5,409  5,131  5,082  5,033  4,951  4,906  4,750  \n","1  5,384  5,393  5,277  5,124  5,002  5,099  5,081  5,202  5,220  5,207  \n","2  7,217  7,083  7,138  7,022  7,035  7,015  6,956  6,947  6,848  6,606  \n","3  7,756  7,318  7,367  7,382  6,955  7,043  7,148  7,209  7,141  7,043  \n","4  8,399  7,847  7,753  7,836  7,829  7,865  7,974  8,111  8,010  7,935  "],"text/html":["\n","  <div id=\"df-c97afe75-d5d0-4a0c-a9cf-372ce77a6c02\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>2001</th>\n","      <th>2002</th>\n","      <th>2003</th>\n","      <th>2004</th>\n","      <th>2005</th>\n","      <th>2006</th>\n","      <th>2007</th>\n","      <th>2008</th>\n","      <th>2009</th>\n","      <th>2010</th>\n","      <th>2011</th>\n","      <th>2012</th>\n","      <th>2013</th>\n","      <th>2014</th>\n","      <th>2015</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>영국</td>\n","      <td>6,192</td>\n","      <td>6,158</td>\n","      <td>6,231</td>\n","      <td>6,206</td>\n","      <td>6,254</td>\n","      <td>6,192</td>\n","      <td>6,142</td>\n","      <td>6,067</td>\n","      <td>5,693</td>\n","      <td>5,741</td>\n","      <td>5,518</td>\n","      <td>5,452</td>\n","      <td>5,409</td>\n","      <td>5,131</td>\n","      <td>5,082</td>\n","      <td>5,033</td>\n","      <td>4,951</td>\n","      <td>4,906</td>\n","      <td>4,750</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>이탈리아</td>\n","      <td>5,318</td>\n","      <td>5,447</td>\n","      <td>5,576</td>\n","      <td>5,644</td>\n","      <td>5,676</td>\n","      <td>5,762</td>\n","      <td>5,718</td>\n","      <td>5,656</td>\n","      <td>5,271</td>\n","      <td>5,384</td>\n","      <td>5,393</td>\n","      <td>5,277</td>\n","      <td>5,124</td>\n","      <td>5,002</td>\n","      <td>5,099</td>\n","      <td>5,081</td>\n","      <td>5,202</td>\n","      <td>5,220</td>\n","      <td>5,207</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>독일</td>\n","      <td>6,806</td>\n","      <td>6,742</td>\n","      <td>6,898</td>\n","      <td>7,030</td>\n","      <td>7,111</td>\n","      <td>7,175</td>\n","      <td>7,185</td>\n","      <td>7,148</td>\n","      <td>6,781</td>\n","      <td>7,217</td>\n","      <td>7,083</td>\n","      <td>7,138</td>\n","      <td>7,022</td>\n","      <td>7,035</td>\n","      <td>7,015</td>\n","      <td>6,956</td>\n","      <td>6,947</td>\n","      <td>6,848</td>\n","      <td>6,606</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>프랑스</td>\n","      <td>7,402</td>\n","      <td>7,366</td>\n","      <td>7,624</td>\n","      <td>7,689</td>\n","      <td>7,707</td>\n","      <td>7,585</td>\n","      <td>7,573</td>\n","      <td>7,703</td>\n","      <td>7,494</td>\n","      <td>7,756</td>\n","      <td>7,318</td>\n","      <td>7,367</td>\n","      <td>7,382</td>\n","      <td>6,955</td>\n","      <td>7,043</td>\n","      <td>7,148</td>\n","      <td>7,209</td>\n","      <td>7,141</td>\n","      <td>7,043</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>일본</td>\n","      <td>7,907</td>\n","      <td>8,220</td>\n","      <td>7,816</td>\n","      <td>8,076</td>\n","      <td>8,233</td>\n","      <td>8,220</td>\n","      <td>8,475</td>\n","      <td>8,072</td>\n","      <td>7,833</td>\n","      <td>8,399</td>\n","      <td>7,847</td>\n","      <td>7,753</td>\n","      <td>7,836</td>\n","      <td>7,829</td>\n","      <td>7,865</td>\n","      <td>7,974</td>\n","      <td>8,111</td>\n","      <td>8,010</td>\n","      <td>7,935</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c97afe75-d5d0-4a0c-a9cf-372ce77a6c02')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c97afe75-d5d0-4a0c-a9cf-372ce77a6c02 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c97afe75-d5d0-4a0c-a9cf-372ce77a6c02');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0dcff355-64c5-4144-a752-306264a8aaf0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0dcff355-64c5-4144-a752-306264a8aaf0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0dcff355-64c5-4144-a752-306264a8aaf0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"oecd_data","summary":"{\n  \"name\": \"oecd_data\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"OECD\\ud3c9\\uade0\",\n          \"\\uc601\\uad6d\",\n          \"\\uc544\\uc774\\uc2ac\\ub780\\ub4dc\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2001\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"IEA,\\u300cKey World Energy Statistics\\u300d\",\n          \"26,947\",\n          \"6,192\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2002\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,228\",\n          \"5,447\",\n          \"8,046\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2003\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,066\",\n          \"5,576\",\n          \"8,044\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2004\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,338\",\n          \"5,644\",\n          \"8,204\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2005\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,640\",\n          \"5,676\",\n          \"8,365\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2006\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,515\",\n          \"5,762\",\n          \"8,381\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2007\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,616\",\n          \"5,718\",\n          \"8,477\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2008\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,647\",\n          \"5,656\",\n          \"8,486\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2009\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,884\",\n          \"5,271\",\n          \"8,012\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2010\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,361\",\n          \"5,384\",\n          \"8,315\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2011\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,227\",\n          \"5,393\",\n          \"8,226\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2012\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,947\",\n          \"5,277\",\n          \"8,089\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2013\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,987\",\n          \"5,124\",\n          \"8,072\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2014\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,962\",\n          \"5,002\",\n          \"8,028\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2015\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,833\",\n          \"5,099\",\n          \"8,016\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2016\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,825\",\n          \"5,081\",\n          \"8,048\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2017\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,573\",\n          \"5,202\",\n          \"7,992\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2018\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,098\",\n          \"5,220\",\n          \"8,165\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2019\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,744\",\n          \"5,207\",\n          \"7,773\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# Unnamed 변경\n","\n","oecd_data.rename(columns={'Unnamed: 0': 'index'}, inplace=True)\n","oecd_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ElvxvcXke3Xw","executionInfo":{"status":"ok","timestamp":1723536354352,"user_tz":-540,"elapsed":356,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"737c02f0-1a86-4177-99fa-2b7a7a71d07b"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  index   2001   2002   2003   2004   2005   2006   2007   2008   2009   2010  \\\n","0    영국  6,192  6,158  6,231  6,206  6,254  6,192  6,142  6,067  5,693  5,741   \n","1  이탈리아  5,318  5,447  5,576  5,644  5,676  5,762  5,718  5,656  5,271  5,384   \n","2    독일  6,806  6,742  6,898  7,030  7,111  7,175  7,185  7,148  6,781  7,217   \n","3   프랑스  7,402  7,366  7,624  7,689  7,707  7,585  7,573  7,703  7,494  7,756   \n","4    일본  7,907  8,220  7,816  8,076  8,233  8,220  8,475  8,072  7,833  8,399   \n","\n","    2011   2012   2013   2014   2015   2016   2017   2018   2019  \n","0  5,518  5,452  5,409  5,131  5,082  5,033  4,951  4,906  4,750  \n","1  5,393  5,277  5,124  5,002  5,099  5,081  5,202  5,220  5,207  \n","2  7,083  7,138  7,022  7,035  7,015  6,956  6,947  6,848  6,606  \n","3  7,318  7,367  7,382  6,955  7,043  7,148  7,209  7,141  7,043  \n","4  7,847  7,753  7,836  7,829  7,865  7,974  8,111  8,010  7,935  "],"text/html":["\n","  <div id=\"df-8831cdd6-ce68-4f7a-b96e-55b6a19c0730\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>2001</th>\n","      <th>2002</th>\n","      <th>2003</th>\n","      <th>2004</th>\n","      <th>2005</th>\n","      <th>2006</th>\n","      <th>2007</th>\n","      <th>2008</th>\n","      <th>2009</th>\n","      <th>2010</th>\n","      <th>2011</th>\n","      <th>2012</th>\n","      <th>2013</th>\n","      <th>2014</th>\n","      <th>2015</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>영국</td>\n","      <td>6,192</td>\n","      <td>6,158</td>\n","      <td>6,231</td>\n","      <td>6,206</td>\n","      <td>6,254</td>\n","      <td>6,192</td>\n","      <td>6,142</td>\n","      <td>6,067</td>\n","      <td>5,693</td>\n","      <td>5,741</td>\n","      <td>5,518</td>\n","      <td>5,452</td>\n","      <td>5,409</td>\n","      <td>5,131</td>\n","      <td>5,082</td>\n","      <td>5,033</td>\n","      <td>4,951</td>\n","      <td>4,906</td>\n","      <td>4,750</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>이탈리아</td>\n","      <td>5,318</td>\n","      <td>5,447</td>\n","      <td>5,576</td>\n","      <td>5,644</td>\n","      <td>5,676</td>\n","      <td>5,762</td>\n","      <td>5,718</td>\n","      <td>5,656</td>\n","      <td>5,271</td>\n","      <td>5,384</td>\n","      <td>5,393</td>\n","      <td>5,277</td>\n","      <td>5,124</td>\n","      <td>5,002</td>\n","      <td>5,099</td>\n","      <td>5,081</td>\n","      <td>5,202</td>\n","      <td>5,220</td>\n","      <td>5,207</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>독일</td>\n","      <td>6,806</td>\n","      <td>6,742</td>\n","      <td>6,898</td>\n","      <td>7,030</td>\n","      <td>7,111</td>\n","      <td>7,175</td>\n","      <td>7,185</td>\n","      <td>7,148</td>\n","      <td>6,781</td>\n","      <td>7,217</td>\n","      <td>7,083</td>\n","      <td>7,138</td>\n","      <td>7,022</td>\n","      <td>7,035</td>\n","      <td>7,015</td>\n","      <td>6,956</td>\n","      <td>6,947</td>\n","      <td>6,848</td>\n","      <td>6,606</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>프랑스</td>\n","      <td>7,402</td>\n","      <td>7,366</td>\n","      <td>7,624</td>\n","      <td>7,689</td>\n","      <td>7,707</td>\n","      <td>7,585</td>\n","      <td>7,573</td>\n","      <td>7,703</td>\n","      <td>7,494</td>\n","      <td>7,756</td>\n","      <td>7,318</td>\n","      <td>7,367</td>\n","      <td>7,382</td>\n","      <td>6,955</td>\n","      <td>7,043</td>\n","      <td>7,148</td>\n","      <td>7,209</td>\n","      <td>7,141</td>\n","      <td>7,043</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>일본</td>\n","      <td>7,907</td>\n","      <td>8,220</td>\n","      <td>7,816</td>\n","      <td>8,076</td>\n","      <td>8,233</td>\n","      <td>8,220</td>\n","      <td>8,475</td>\n","      <td>8,072</td>\n","      <td>7,833</td>\n","      <td>8,399</td>\n","      <td>7,847</td>\n","      <td>7,753</td>\n","      <td>7,836</td>\n","      <td>7,829</td>\n","      <td>7,865</td>\n","      <td>7,974</td>\n","      <td>8,111</td>\n","      <td>8,010</td>\n","      <td>7,935</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8831cdd6-ce68-4f7a-b96e-55b6a19c0730')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8831cdd6-ce68-4f7a-b96e-55b6a19c0730 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8831cdd6-ce68-4f7a-b96e-55b6a19c0730');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-06a785cf-f2cf-470d-9a17-86d89c92b21d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-06a785cf-f2cf-470d-9a17-86d89c92b21d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-06a785cf-f2cf-470d-9a17-86d89c92b21d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"oecd_data","summary":"{\n  \"name\": \"oecd_data\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"OECD\\ud3c9\\uade0\",\n          \"\\uc601\\uad6d\",\n          \"\\uc544\\uc774\\uc2ac\\ub780\\ub4dc\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2001\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"IEA,\\u300cKey World Energy Statistics\\u300d\",\n          \"26,947\",\n          \"6,192\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2002\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,228\",\n          \"5,447\",\n          \"8,046\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2003\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,066\",\n          \"5,576\",\n          \"8,044\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2004\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,338\",\n          \"5,644\",\n          \"8,204\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2005\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,640\",\n          \"5,676\",\n          \"8,365\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2006\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,515\",\n          \"5,762\",\n          \"8,381\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2007\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,616\",\n          \"5,718\",\n          \"8,477\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2008\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,647\",\n          \"5,656\",\n          \"8,486\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2009\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,884\",\n          \"5,271\",\n          \"8,012\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2010\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,361\",\n          \"5,384\",\n          \"8,315\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2011\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,227\",\n          \"5,393\",\n          \"8,226\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2012\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,947\",\n          \"5,277\",\n          \"8,089\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2013\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,987\",\n          \"5,124\",\n          \"8,072\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2014\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,962\",\n          \"5,002\",\n          \"8,028\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2015\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,833\",\n          \"5,099\",\n          \"8,016\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2016\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,825\",\n          \"5,081\",\n          \"8,048\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2017\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,573\",\n          \"5,202\",\n          \"7,992\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2018\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,098\",\n          \"5,220\",\n          \"8,165\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2019\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,744\",\n          \"5,207\",\n          \"7,773\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["oecd_data.set_index('index', inplace=True)\n","oecd_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"AtM_0NHnfGO9","executionInfo":{"status":"ok","timestamp":1723536354735,"user_tz":-540,"elapsed":2,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"e1db5e64-11dc-4363-c616-654d81b2fdc6"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        2001   2002   2003   2004   2005   2006   2007   2008   2009   2010  \\\n","index                                                                         \n","영국     6,192  6,158  6,231  6,206  6,254  6,192  6,142  6,067  5,693  5,741   \n","이탈리아   5,318  5,447  5,576  5,644  5,676  5,762  5,718  5,656  5,271  5,384   \n","독일     6,806  6,742  6,898  7,030  7,111  7,175  7,185  7,148  6,781  7,217   \n","프랑스    7,402  7,366  7,624  7,689  7,707  7,585  7,573  7,703  7,494  7,756   \n","일본     7,907  8,220  7,816  8,076  8,233  8,220  8,475  8,072  7,833  8,399   \n","\n","        2011   2012   2013   2014   2015   2016   2017   2018   2019  \n","index                                                                 \n","영국     5,518  5,452  5,409  5,131  5,082  5,033  4,951  4,906  4,750  \n","이탈리아   5,393  5,277  5,124  5,002  5,099  5,081  5,202  5,220  5,207  \n","독일     7,083  7,138  7,022  7,035  7,015  6,956  6,947  6,848  6,606  \n","프랑스    7,318  7,367  7,382  6,955  7,043  7,148  7,209  7,141  7,043  \n","일본     7,847  7,753  7,836  7,829  7,865  7,974  8,111  8,010  7,935  "],"text/html":["\n","  <div id=\"df-3a9644f3-74ae-45c6-9fa5-476dbd83fced\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>2001</th>\n","      <th>2002</th>\n","      <th>2003</th>\n","      <th>2004</th>\n","      <th>2005</th>\n","      <th>2006</th>\n","      <th>2007</th>\n","      <th>2008</th>\n","      <th>2009</th>\n","      <th>2010</th>\n","      <th>2011</th>\n","      <th>2012</th>\n","      <th>2013</th>\n","      <th>2014</th>\n","      <th>2015</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","    </tr>\n","    <tr>\n","      <th>index</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>영국</th>\n","      <td>6,192</td>\n","      <td>6,158</td>\n","      <td>6,231</td>\n","      <td>6,206</td>\n","      <td>6,254</td>\n","      <td>6,192</td>\n","      <td>6,142</td>\n","      <td>6,067</td>\n","      <td>5,693</td>\n","      <td>5,741</td>\n","      <td>5,518</td>\n","      <td>5,452</td>\n","      <td>5,409</td>\n","      <td>5,131</td>\n","      <td>5,082</td>\n","      <td>5,033</td>\n","      <td>4,951</td>\n","      <td>4,906</td>\n","      <td>4,750</td>\n","    </tr>\n","    <tr>\n","      <th>이탈리아</th>\n","      <td>5,318</td>\n","      <td>5,447</td>\n","      <td>5,576</td>\n","      <td>5,644</td>\n","      <td>5,676</td>\n","      <td>5,762</td>\n","      <td>5,718</td>\n","      <td>5,656</td>\n","      <td>5,271</td>\n","      <td>5,384</td>\n","      <td>5,393</td>\n","      <td>5,277</td>\n","      <td>5,124</td>\n","      <td>5,002</td>\n","      <td>5,099</td>\n","      <td>5,081</td>\n","      <td>5,202</td>\n","      <td>5,220</td>\n","      <td>5,207</td>\n","    </tr>\n","    <tr>\n","      <th>독일</th>\n","      <td>6,806</td>\n","      <td>6,742</td>\n","      <td>6,898</td>\n","      <td>7,030</td>\n","      <td>7,111</td>\n","      <td>7,175</td>\n","      <td>7,185</td>\n","      <td>7,148</td>\n","      <td>6,781</td>\n","      <td>7,217</td>\n","      <td>7,083</td>\n","      <td>7,138</td>\n","      <td>7,022</td>\n","      <td>7,035</td>\n","      <td>7,015</td>\n","      <td>6,956</td>\n","      <td>6,947</td>\n","      <td>6,848</td>\n","      <td>6,606</td>\n","    </tr>\n","    <tr>\n","      <th>프랑스</th>\n","      <td>7,402</td>\n","      <td>7,366</td>\n","      <td>7,624</td>\n","      <td>7,689</td>\n","      <td>7,707</td>\n","      <td>7,585</td>\n","      <td>7,573</td>\n","      <td>7,703</td>\n","      <td>7,494</td>\n","      <td>7,756</td>\n","      <td>7,318</td>\n","      <td>7,367</td>\n","      <td>7,382</td>\n","      <td>6,955</td>\n","      <td>7,043</td>\n","      <td>7,148</td>\n","      <td>7,209</td>\n","      <td>7,141</td>\n","      <td>7,043</td>\n","    </tr>\n","    <tr>\n","      <th>일본</th>\n","      <td>7,907</td>\n","      <td>8,220</td>\n","      <td>7,816</td>\n","      <td>8,076</td>\n","      <td>8,233</td>\n","      <td>8,220</td>\n","      <td>8,475</td>\n","      <td>8,072</td>\n","      <td>7,833</td>\n","      <td>8,399</td>\n","      <td>7,847</td>\n","      <td>7,753</td>\n","      <td>7,836</td>\n","      <td>7,829</td>\n","      <td>7,865</td>\n","      <td>7,974</td>\n","      <td>8,111</td>\n","      <td>8,010</td>\n","      <td>7,935</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3a9644f3-74ae-45c6-9fa5-476dbd83fced')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3a9644f3-74ae-45c6-9fa5-476dbd83fced button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3a9644f3-74ae-45c6-9fa5-476dbd83fced');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fffeef6d-cb96-439a-99e1-760a634439f2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fffeef6d-cb96-439a-99e1-760a634439f2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fffeef6d-cb96-439a-99e1-760a634439f2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"oecd_data","summary":"{\n  \"name\": \"oecd_data\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"OECD\\ud3c9\\uade0\",\n          \"\\uc601\\uad6d\",\n          \"\\uc544\\uc774\\uc2ac\\ub780\\ub4dc\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2001\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"IEA,\\u300cKey World Energy Statistics\\u300d\",\n          \"26,947\",\n          \"6,192\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2002\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,228\",\n          \"5,447\",\n          \"8,046\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2003\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,066\",\n          \"5,576\",\n          \"8,044\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2004\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,338\",\n          \"5,644\",\n          \"8,204\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2005\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,640\",\n          \"5,676\",\n          \"8,365\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2006\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,515\",\n          \"5,762\",\n          \"8,381\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2007\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,616\",\n          \"5,718\",\n          \"8,477\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2008\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,647\",\n          \"5,656\",\n          \"8,486\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2009\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,884\",\n          \"5,271\",\n          \"8,012\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2010\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,361\",\n          \"5,384\",\n          \"8,315\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2011\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,227\",\n          \"5,393\",\n          \"8,226\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2012\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,947\",\n          \"5,277\",\n          \"8,089\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2013\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,987\",\n          \"5,124\",\n          \"8,072\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2014\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,962\",\n          \"5,002\",\n          \"8,028\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2015\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,833\",\n          \"5,099\",\n          \"8,016\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2016\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,825\",\n          \"5,081\",\n          \"8,048\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2017\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,573\",\n          \"5,202\",\n          \"7,992\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2018\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,098\",\n          \"5,220\",\n          \"8,165\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2019\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,744\",\n          \"5,207\",\n          \"7,773\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["oecd_data.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":431},"id":"TQ8DK40UfNQq","executionInfo":{"status":"ok","timestamp":1723536355075,"user_tz":-540,"elapsed":3,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"2bc1b7fa-4706-4a53-e6da-f51d2d6560c4"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                  2001    2002    2003  \\\n","index                                                                    \n","한국                                               5,607   6,495   7,007   \n","미국                                              12,896  13,228  13,066   \n","아이슬란드                                           26,947  27,764  27,630   \n","출처:                  IEA,「Key World Energy Statistics」     NaN     NaN   \n","NaN      * 자료 : IEA,「Key World Energy Statistics」 각 연도     NaN     NaN   \n","\n","         2004    2005    2006    2007    2008    2009    2010    2011    2012  \\\n","index                                                                           \n","한국      7,391   7,779   8,063   8,502   8,853   8,980   9,851  10,162  10,346   \n","미국     13,338  13,640  13,515  13,616  13,647  12,884  13,361  13,227  12,947   \n","아이슬란드  28,126  28,057  31,306  36,920  49,818  51,179  51,447  52,376  53,156   \n","출처:       NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN   \n","NaN       NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN   \n","\n","         2013    2014    2015    2016    2017    2018    2019  \n","index                                                          \n","한국     10,428  10,564  10,558  10,618  10,654  11,082  10,878  \n","미국     12,987  12,962  12,833  12,825  12,573  13,098  12,744  \n","아이슬란드  54,759  53,896  55,054  53,913  54,366  54,605  52,514  \n","출처:       NaN     NaN     NaN     NaN     NaN     NaN     NaN  \n","NaN       NaN     NaN     NaN     NaN     NaN     NaN     NaN  "],"text/html":["\n","  <div id=\"df-1c048b71-5c76-4478-8ec3-065905f6bf30\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>2001</th>\n","      <th>2002</th>\n","      <th>2003</th>\n","      <th>2004</th>\n","      <th>2005</th>\n","      <th>2006</th>\n","      <th>2007</th>\n","      <th>2008</th>\n","      <th>2009</th>\n","      <th>2010</th>\n","      <th>2011</th>\n","      <th>2012</th>\n","      <th>2013</th>\n","      <th>2014</th>\n","      <th>2015</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","    </tr>\n","    <tr>\n","      <th>index</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>한국</th>\n","      <td>5,607</td>\n","      <td>6,495</td>\n","      <td>7,007</td>\n","      <td>7,391</td>\n","      <td>7,779</td>\n","      <td>8,063</td>\n","      <td>8,502</td>\n","      <td>8,853</td>\n","      <td>8,980</td>\n","      <td>9,851</td>\n","      <td>10,162</td>\n","      <td>10,346</td>\n","      <td>10,428</td>\n","      <td>10,564</td>\n","      <td>10,558</td>\n","      <td>10,618</td>\n","      <td>10,654</td>\n","      <td>11,082</td>\n","      <td>10,878</td>\n","    </tr>\n","    <tr>\n","      <th>미국</th>\n","      <td>12,896</td>\n","      <td>13,228</td>\n","      <td>13,066</td>\n","      <td>13,338</td>\n","      <td>13,640</td>\n","      <td>13,515</td>\n","      <td>13,616</td>\n","      <td>13,647</td>\n","      <td>12,884</td>\n","      <td>13,361</td>\n","      <td>13,227</td>\n","      <td>12,947</td>\n","      <td>12,987</td>\n","      <td>12,962</td>\n","      <td>12,833</td>\n","      <td>12,825</td>\n","      <td>12,573</td>\n","      <td>13,098</td>\n","      <td>12,744</td>\n","    </tr>\n","    <tr>\n","      <th>아이슬란드</th>\n","      <td>26,947</td>\n","      <td>27,764</td>\n","      <td>27,630</td>\n","      <td>28,126</td>\n","      <td>28,057</td>\n","      <td>31,306</td>\n","      <td>36,920</td>\n","      <td>49,818</td>\n","      <td>51,179</td>\n","      <td>51,447</td>\n","      <td>52,376</td>\n","      <td>53,156</td>\n","      <td>54,759</td>\n","      <td>53,896</td>\n","      <td>55,054</td>\n","      <td>53,913</td>\n","      <td>54,366</td>\n","      <td>54,605</td>\n","      <td>52,514</td>\n","    </tr>\n","    <tr>\n","      <th>출처:</th>\n","      <td>IEA,「Key World Energy Statistics」</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>NaN</th>\n","      <td>* 자료 : IEA,「Key World Energy Statistics」 각 연도</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1c048b71-5c76-4478-8ec3-065905f6bf30')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1c048b71-5c76-4478-8ec3-065905f6bf30 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1c048b71-5c76-4478-8ec3-065905f6bf30');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-74b4c946-cdc0-495b-bb08-d855cc7a92b9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-74b4c946-cdc0-495b-bb08-d855cc7a92b9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-74b4c946-cdc0-495b-bb08-d855cc7a92b9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"oecd_data\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\ubbf8\\uad6d\",\n          \"\\ucd9c\\ucc98:\",\n          \"\\ud55c\\uad6d\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2001\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"12,896\",\n          \"  * \\uc790\\ub8cc : IEA,\\u300cKey World Energy Statistics\\u300d \\uac01 \\uc5f0\\ub3c4\",\n          \"26,947\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2002\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"6,495\",\n          \"13,228\",\n          \"27,764\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2003\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"7,007\",\n          \"13,066\",\n          \"27,630\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2004\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"7,391\",\n          \"13,338\",\n          \"28,126\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2005\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"7,779\",\n          \"13,640\",\n          \"28,057\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2006\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"8,063\",\n          \"13,515\",\n          \"31,306\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2007\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"8,502\",\n          \"13,616\",\n          \"36,920\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2008\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"8,853\",\n          \"13,647\",\n          \"49,818\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2009\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"8,980\",\n          \"12,884\",\n          \"51,179\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2010\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"9,851\",\n          \"13,361\",\n          \"51,447\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2011\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"10,162\",\n          \"13,227\",\n          \"52,376\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2012\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"10,346\",\n          \"12,947\",\n          \"53,156\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2013\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"10,428\",\n          \"12,987\",\n          \"54,759\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2014\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"10,564\",\n          \"12,962\",\n          \"53,896\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2015\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"10,558\",\n          \"12,833\",\n          \"55,054\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2016\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"10,618\",\n          \"12,825\",\n          \"53,913\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2017\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"10,654\",\n          \"12,573\",\n          \"54,366\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2018\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"11,082\",\n          \"13,098\",\n          \"54,605\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2019\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"10,878\",\n          \"12,744\",\n          \"52,514\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["oecd_data = oecd_data.loc['영국':'아이슬란드']\n","oecd_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":501},"id":"ZUSv8B1QfTeO","executionInfo":{"status":"ok","timestamp":1723536355565,"user_tz":-540,"elapsed":492,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"5bd4e0f7-b9f8-4d0d-fdca-641e5b77aa07"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          2001    2002    2003    2004    2005    2006    2007    2008  \\\n","index                                                                    \n","영국       6,192   6,158   6,231   6,206   6,254   6,192   6,142   6,067   \n","이탈리아     5,318   5,447   5,576   5,644   5,676   5,762   5,718   5,656   \n","독일       6,806   6,742   6,898   7,030   7,111   7,175   7,185   7,148   \n","프랑스      7,402   7,366   7,624   7,689   7,707   7,585   7,573   7,703   \n","일본       7,907   8,220   7,816   8,076   8,233   8,220   8,475   8,072   \n","OECD평균   7,879   8,046   8,044   8,204   8,365   8,381   8,477   8,486   \n","호주      10,335  10,502  10,642  11,126  11,439  11,309  11,216  11,174   \n","한국       5,607   6,495   7,007   7,391   7,779   8,063   8,502   8,853   \n","미국      12,896  13,228  13,066  13,338  13,640  13,515  13,616  13,647   \n","아이슬란드   26,947  27,764  27,630  28,126  28,057  31,306  36,920  49,818   \n","\n","          2009    2010    2011    2012    2013    2014    2015    2016  \\\n","index                                                                    \n","영국       5,693   5,741   5,518   5,452   5,409   5,131   5,082   5,033   \n","이탈리아     5,271   5,384   5,393   5,277   5,124   5,002   5,099   5,081   \n","독일       6,781   7,217   7,083   7,138   7,022   7,035   7,015   6,956   \n","프랑스      7,494   7,756   7,318   7,367   7,382   6,955   7,043   7,148   \n","일본       7,833   8,399   7,847   7,753   7,836   7,829   7,865   7,974   \n","OECD평균   8,012   8,315   8,226   8,089   8,072   8,028   8,016   8,048   \n","호주      11,038  10,063  10,514  10,218  10,067  10,002   9,892   9,911   \n","한국       8,980   9,851  10,162  10,346  10,428  10,564  10,558  10,618   \n","미국      12,884  13,361  13,227  12,947  12,987  12,962  12,833  12,825   \n","아이슬란드   51,179  51,447  52,376  53,156  54,759  53,896  55,054  53,913   \n","\n","          2017    2018    2019  \n","index                           \n","영국       4,951   4,906   4,750  \n","이탈리아     5,202   5,220   5,207  \n","독일       6,947   6,848   6,606  \n","프랑스      7,209   7,141   7,043  \n","일본       8,111   8,010   7,935  \n","OECD평균   7,992   8,165   7,773  \n","호주       9,922   9,906   9,897  \n","한국      10,654  11,082  10,878  \n","미국      12,573  13,098  12,744  \n","아이슬란드   54,366  54,605  52,514  "],"text/html":["\n","  <div id=\"df-c1051530-4b0a-462c-9ffe-0245d254c16c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>2001</th>\n","      <th>2002</th>\n","      <th>2003</th>\n","      <th>2004</th>\n","      <th>2005</th>\n","      <th>2006</th>\n","      <th>2007</th>\n","      <th>2008</th>\n","      <th>2009</th>\n","      <th>2010</th>\n","      <th>2011</th>\n","      <th>2012</th>\n","      <th>2013</th>\n","      <th>2014</th>\n","      <th>2015</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","    </tr>\n","    <tr>\n","      <th>index</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>영국</th>\n","      <td>6,192</td>\n","      <td>6,158</td>\n","      <td>6,231</td>\n","      <td>6,206</td>\n","      <td>6,254</td>\n","      <td>6,192</td>\n","      <td>6,142</td>\n","      <td>6,067</td>\n","      <td>5,693</td>\n","      <td>5,741</td>\n","      <td>5,518</td>\n","      <td>5,452</td>\n","      <td>5,409</td>\n","      <td>5,131</td>\n","      <td>5,082</td>\n","      <td>5,033</td>\n","      <td>4,951</td>\n","      <td>4,906</td>\n","      <td>4,750</td>\n","    </tr>\n","    <tr>\n","      <th>이탈리아</th>\n","      <td>5,318</td>\n","      <td>5,447</td>\n","      <td>5,576</td>\n","      <td>5,644</td>\n","      <td>5,676</td>\n","      <td>5,762</td>\n","      <td>5,718</td>\n","      <td>5,656</td>\n","      <td>5,271</td>\n","      <td>5,384</td>\n","      <td>5,393</td>\n","      <td>5,277</td>\n","      <td>5,124</td>\n","      <td>5,002</td>\n","      <td>5,099</td>\n","      <td>5,081</td>\n","      <td>5,202</td>\n","      <td>5,220</td>\n","      <td>5,207</td>\n","    </tr>\n","    <tr>\n","      <th>독일</th>\n","      <td>6,806</td>\n","      <td>6,742</td>\n","      <td>6,898</td>\n","      <td>7,030</td>\n","      <td>7,111</td>\n","      <td>7,175</td>\n","      <td>7,185</td>\n","      <td>7,148</td>\n","      <td>6,781</td>\n","      <td>7,217</td>\n","      <td>7,083</td>\n","      <td>7,138</td>\n","      <td>7,022</td>\n","      <td>7,035</td>\n","      <td>7,015</td>\n","      <td>6,956</td>\n","      <td>6,947</td>\n","      <td>6,848</td>\n","      <td>6,606</td>\n","    </tr>\n","    <tr>\n","      <th>프랑스</th>\n","      <td>7,402</td>\n","      <td>7,366</td>\n","      <td>7,624</td>\n","      <td>7,689</td>\n","      <td>7,707</td>\n","      <td>7,585</td>\n","      <td>7,573</td>\n","      <td>7,703</td>\n","      <td>7,494</td>\n","      <td>7,756</td>\n","      <td>7,318</td>\n","      <td>7,367</td>\n","      <td>7,382</td>\n","      <td>6,955</td>\n","      <td>7,043</td>\n","      <td>7,148</td>\n","      <td>7,209</td>\n","      <td>7,141</td>\n","      <td>7,043</td>\n","    </tr>\n","    <tr>\n","      <th>일본</th>\n","      <td>7,907</td>\n","      <td>8,220</td>\n","      <td>7,816</td>\n","      <td>8,076</td>\n","      <td>8,233</td>\n","      <td>8,220</td>\n","      <td>8,475</td>\n","      <td>8,072</td>\n","      <td>7,833</td>\n","      <td>8,399</td>\n","      <td>7,847</td>\n","      <td>7,753</td>\n","      <td>7,836</td>\n","      <td>7,829</td>\n","      <td>7,865</td>\n","      <td>7,974</td>\n","      <td>8,111</td>\n","      <td>8,010</td>\n","      <td>7,935</td>\n","    </tr>\n","    <tr>\n","      <th>OECD평균</th>\n","      <td>7,879</td>\n","      <td>8,046</td>\n","      <td>8,044</td>\n","      <td>8,204</td>\n","      <td>8,365</td>\n","      <td>8,381</td>\n","      <td>8,477</td>\n","      <td>8,486</td>\n","      <td>8,012</td>\n","      <td>8,315</td>\n","      <td>8,226</td>\n","      <td>8,089</td>\n","      <td>8,072</td>\n","      <td>8,028</td>\n","      <td>8,016</td>\n","      <td>8,048</td>\n","      <td>7,992</td>\n","      <td>8,165</td>\n","      <td>7,773</td>\n","    </tr>\n","    <tr>\n","      <th>호주</th>\n","      <td>10,335</td>\n","      <td>10,502</td>\n","      <td>10,642</td>\n","      <td>11,126</td>\n","      <td>11,439</td>\n","      <td>11,309</td>\n","      <td>11,216</td>\n","      <td>11,174</td>\n","      <td>11,038</td>\n","      <td>10,063</td>\n","      <td>10,514</td>\n","      <td>10,218</td>\n","      <td>10,067</td>\n","      <td>10,002</td>\n","      <td>9,892</td>\n","      <td>9,911</td>\n","      <td>9,922</td>\n","      <td>9,906</td>\n","      <td>9,897</td>\n","    </tr>\n","    <tr>\n","      <th>한국</th>\n","      <td>5,607</td>\n","      <td>6,495</td>\n","      <td>7,007</td>\n","      <td>7,391</td>\n","      <td>7,779</td>\n","      <td>8,063</td>\n","      <td>8,502</td>\n","      <td>8,853</td>\n","      <td>8,980</td>\n","      <td>9,851</td>\n","      <td>10,162</td>\n","      <td>10,346</td>\n","      <td>10,428</td>\n","      <td>10,564</td>\n","      <td>10,558</td>\n","      <td>10,618</td>\n","      <td>10,654</td>\n","      <td>11,082</td>\n","      <td>10,878</td>\n","    </tr>\n","    <tr>\n","      <th>미국</th>\n","      <td>12,896</td>\n","      <td>13,228</td>\n","      <td>13,066</td>\n","      <td>13,338</td>\n","      <td>13,640</td>\n","      <td>13,515</td>\n","      <td>13,616</td>\n","      <td>13,647</td>\n","      <td>12,884</td>\n","      <td>13,361</td>\n","      <td>13,227</td>\n","      <td>12,947</td>\n","      <td>12,987</td>\n","      <td>12,962</td>\n","      <td>12,833</td>\n","      <td>12,825</td>\n","      <td>12,573</td>\n","      <td>13,098</td>\n","      <td>12,744</td>\n","    </tr>\n","    <tr>\n","      <th>아이슬란드</th>\n","      <td>26,947</td>\n","      <td>27,764</td>\n","      <td>27,630</td>\n","      <td>28,126</td>\n","      <td>28,057</td>\n","      <td>31,306</td>\n","      <td>36,920</td>\n","      <td>49,818</td>\n","      <td>51,179</td>\n","      <td>51,447</td>\n","      <td>52,376</td>\n","      <td>53,156</td>\n","      <td>54,759</td>\n","      <td>53,896</td>\n","      <td>55,054</td>\n","      <td>53,913</td>\n","      <td>54,366</td>\n","      <td>54,605</td>\n","      <td>52,514</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c1051530-4b0a-462c-9ffe-0245d254c16c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c1051530-4b0a-462c-9ffe-0245d254c16c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c1051530-4b0a-462c-9ffe-0245d254c16c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-795252a0-b3d5-465b-8fed-9fba624bcfa8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-795252a0-b3d5-465b-8fed-9fba624bcfa8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-795252a0-b3d5-465b-8fed-9fba624bcfa8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_65ea0c3d-32ab-42da-b1d3-a6e651450bad\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('oecd_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_65ea0c3d-32ab-42da-b1d3-a6e651450bad button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('oecd_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"oecd_data","summary":"{\n  \"name\": \"oecd_data\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"\\ubbf8\\uad6d\",\n          \"\\uc774\\ud0c8\\ub9ac\\uc544\",\n          \"OECD\\ud3c9\\uade0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2001\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,896\",\n          \"5,318\",\n          \"7,879\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2002\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,228\",\n          \"5,447\",\n          \"8,046\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2003\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,066\",\n          \"5,576\",\n          \"8,044\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2004\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,338\",\n          \"5,644\",\n          \"8,204\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2005\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,640\",\n          \"5,676\",\n          \"8,365\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2006\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,515\",\n          \"5,762\",\n          \"8,381\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2007\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,616\",\n          \"5,718\",\n          \"8,477\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2008\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,647\",\n          \"5,656\",\n          \"8,486\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2009\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,884\",\n          \"5,271\",\n          \"8,012\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2010\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,361\",\n          \"5,384\",\n          \"8,315\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2011\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,227\",\n          \"5,393\",\n          \"8,226\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2012\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,947\",\n          \"5,277\",\n          \"8,089\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2013\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,987\",\n          \"5,124\",\n          \"8,072\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2014\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,962\",\n          \"5,002\",\n          \"8,028\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2015\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,833\",\n          \"5,099\",\n          \"8,016\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2016\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,825\",\n          \"5,081\",\n          \"8,048\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2017\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,573\",\n          \"5,202\",\n          \"7,992\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2018\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,098\",\n          \"5,220\",\n          \"8,165\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2019\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,744\",\n          \"5,207\",\n          \"7,773\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["oecd_data = oecd_data.T\n","oecd_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ZI5Wq27YdpUI","executionInfo":{"status":"ok","timestamp":1723536355565,"user_tz":-540,"elapsed":6,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"eebb46de-bcdd-43a7-a274-9d82b0e7ebd6"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["index     영국   이탈리아     독일    프랑스     일본 OECD평균      호주     한국      미국   아이슬란드\n","2001   6,192  5,318  6,806  7,402  7,907  7,879  10,335  5,607  12,896  26,947\n","2002   6,158  5,447  6,742  7,366  8,220  8,046  10,502  6,495  13,228  27,764\n","2003   6,231  5,576  6,898  7,624  7,816  8,044  10,642  7,007  13,066  27,630\n","2004   6,206  5,644  7,030  7,689  8,076  8,204  11,126  7,391  13,338  28,126\n","2005   6,254  5,676  7,111  7,707  8,233  8,365  11,439  7,779  13,640  28,057"],"text/html":["\n","  <div id=\"df-409e9e83-d4e1-44d4-be37-2631cde08c51\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>index</th>\n","      <th>영국</th>\n","      <th>이탈리아</th>\n","      <th>독일</th>\n","      <th>프랑스</th>\n","      <th>일본</th>\n","      <th>OECD평균</th>\n","      <th>호주</th>\n","      <th>한국</th>\n","      <th>미국</th>\n","      <th>아이슬란드</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2001</th>\n","      <td>6,192</td>\n","      <td>5,318</td>\n","      <td>6,806</td>\n","      <td>7,402</td>\n","      <td>7,907</td>\n","      <td>7,879</td>\n","      <td>10,335</td>\n","      <td>5,607</td>\n","      <td>12,896</td>\n","      <td>26,947</td>\n","    </tr>\n","    <tr>\n","      <th>2002</th>\n","      <td>6,158</td>\n","      <td>5,447</td>\n","      <td>6,742</td>\n","      <td>7,366</td>\n","      <td>8,220</td>\n","      <td>8,046</td>\n","      <td>10,502</td>\n","      <td>6,495</td>\n","      <td>13,228</td>\n","      <td>27,764</td>\n","    </tr>\n","    <tr>\n","      <th>2003</th>\n","      <td>6,231</td>\n","      <td>5,576</td>\n","      <td>6,898</td>\n","      <td>7,624</td>\n","      <td>7,816</td>\n","      <td>8,044</td>\n","      <td>10,642</td>\n","      <td>7,007</td>\n","      <td>13,066</td>\n","      <td>27,630</td>\n","    </tr>\n","    <tr>\n","      <th>2004</th>\n","      <td>6,206</td>\n","      <td>5,644</td>\n","      <td>7,030</td>\n","      <td>7,689</td>\n","      <td>8,076</td>\n","      <td>8,204</td>\n","      <td>11,126</td>\n","      <td>7,391</td>\n","      <td>13,338</td>\n","      <td>28,126</td>\n","    </tr>\n","    <tr>\n","      <th>2005</th>\n","      <td>6,254</td>\n","      <td>5,676</td>\n","      <td>7,111</td>\n","      <td>7,707</td>\n","      <td>8,233</td>\n","      <td>8,365</td>\n","      <td>11,439</td>\n","      <td>7,779</td>\n","      <td>13,640</td>\n","      <td>28,057</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-409e9e83-d4e1-44d4-be37-2631cde08c51')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-409e9e83-d4e1-44d4-be37-2631cde08c51 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-409e9e83-d4e1-44d4-be37-2631cde08c51');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ce58656b-a6d2-4e2e-b90c-a1055413a04b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ce58656b-a6d2-4e2e-b90c-a1055413a04b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ce58656b-a6d2-4e2e-b90c-a1055413a04b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"oecd_data","summary":"{\n  \"name\": \"oecd_data\",\n  \"rows\": 19,\n  \"fields\": [\n    {\n      \"column\": \"\\uc601\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"6,192\",\n          \"6,158\",\n          \"5,741\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc774\\ud0c8\\ub9ac\\uc544\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"5,318\",\n          \"5,762\",\n          \"5,277\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub3c5\\uc77c\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"6,806\",\n          \"7,175\",\n          \"7,138\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud504\\ub791\\uc2a4\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"7,402\",\n          \"7,366\",\n          \"7,494\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc77c\\ubcf8\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"7,907\",\n          \"8,220\",\n          \"8,399\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OECD\\ud3c9\\uade0\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"7,879\",\n          \"8,381\",\n          \"8,089\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud638\\uc8fc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"10,335\",\n          \"11,309\",\n          \"10,218\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud55c\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"5,607\",\n          \"8,063\",\n          \"10,346\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubbf8\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"12,896\",\n          \"13,515\",\n          \"12,947\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc544\\uc774\\uc2ac\\ub780\\ub4dc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"26,947\",\n          \"31,306\",\n          \"53,156\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["oecd_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wErOgLIdfhAn","executionInfo":{"status":"ok","timestamp":1723536355565,"user_tz":-540,"elapsed":5,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"c7564240-162a-493b-eed0-14ee2e49a9a3"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 19 entries, 2001 to 2019\n","Data columns (total 10 columns):\n"," #   Column  Non-Null Count  Dtype \n","---  ------  --------------  ----- \n"," 0   영국      19 non-null     object\n"," 1   이탈리아    19 non-null     object\n"," 2   독일      19 non-null     object\n"," 3   프랑스     19 non-null     object\n"," 4   일본      19 non-null     object\n"," 5   OECD평균  19 non-null     object\n"," 6   호주      19 non-null     object\n"," 7   한국      19 non-null     object\n"," 8   미국      19 non-null     object\n"," 9   아이슬란드   19 non-null     object\n","dtypes: object(10)\n","memory usage: 2.2+ KB\n"]}]},{"cell_type":"code","source":["# 문자열에서 쉼표 제거 후 정수형으로 변환\n","\n","oecd_data = oecd_data.replace(',', '',regex=True).astype(int) # 쉼표(,)를 포함한 모든 숫자를 찾거나 특정한 패턴에 맞는 문자열을 찾는 등의 작업 https://wikidocs.net/154287\n","oecd_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pIchCdbKf4bt","executionInfo":{"status":"ok","timestamp":1723536355565,"user_tz":-540,"elapsed":4,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"ecffab19-1c64-4e6a-beba-0b2d29c0c5d8"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 19 entries, 2001 to 2019\n","Data columns (total 10 columns):\n"," #   Column  Non-Null Count  Dtype\n","---  ------  --------------  -----\n"," 0   영국      19 non-null     int64\n"," 1   이탈리아    19 non-null     int64\n"," 2   독일      19 non-null     int64\n"," 3   프랑스     19 non-null     int64\n"," 4   일본      19 non-null     int64\n"," 5   OECD평균  19 non-null     int64\n"," 6   호주      19 non-null     int64\n"," 7   한국      19 non-null     int64\n"," 8   미국      19 non-null     int64\n"," 9   아이슬란드   19 non-null     int64\n","dtypes: int64(10)\n","memory usage: 2.2+ KB\n"]}]},{"cell_type":"code","source":["oecd_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":645},"id":"HHXu-PvKeMyL","executionInfo":{"status":"ok","timestamp":1723536355565,"user_tz":-540,"elapsed":3,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"e7fb49b7-8fb0-4cb8-f553-83af83783c97"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["index    영국  이탈리아    독일   프랑스    일본  OECD평균     호주     한국     미국  아이슬란드\n","2001   6192  5318  6806  7402  7907    7879  10335   5607  12896  26947\n","2002   6158  5447  6742  7366  8220    8046  10502   6495  13228  27764\n","2003   6231  5576  6898  7624  7816    8044  10642   7007  13066  27630\n","2004   6206  5644  7030  7689  8076    8204  11126   7391  13338  28126\n","2005   6254  5676  7111  7707  8233    8365  11439   7779  13640  28057\n","2006   6192  5762  7175  7585  8220    8381  11309   8063  13515  31306\n","2007   6142  5718  7185  7573  8475    8477  11216   8502  13616  36920\n","2008   6067  5656  7148  7703  8072    8486  11174   8853  13647  49818\n","2009   5693  5271  6781  7494  7833    8012  11038   8980  12884  51179\n","2010   5741  5384  7217  7756  8399    8315  10063   9851  13361  51447\n","2011   5518  5393  7083  7318  7847    8226  10514  10162  13227  52376\n","2012   5452  5277  7138  7367  7753    8089  10218  10346  12947  53156\n","2013   5409  5124  7022  7382  7836    8072  10067  10428  12987  54759\n","2014   5131  5002  7035  6955  7829    8028  10002  10564  12962  53896\n","2015   5082  5099  7015  7043  7865    8016   9892  10558  12833  55054\n","2016   5033  5081  6956  7148  7974    8048   9911  10618  12825  53913\n","2017   4951  5202  6947  7209  8111    7992   9922  10654  12573  54366\n","2018   4906  5220  6848  7141  8010    8165   9906  11082  13098  54605\n","2019   4750  5207  6606  7043  7935    7773   9897  10878  12744  52514"],"text/html":["\n","  <div id=\"df-1cde1683-c990-4633-a601-97ed5323a170\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>index</th>\n","      <th>영국</th>\n","      <th>이탈리아</th>\n","      <th>독일</th>\n","      <th>프랑스</th>\n","      <th>일본</th>\n","      <th>OECD평균</th>\n","      <th>호주</th>\n","      <th>한국</th>\n","      <th>미국</th>\n","      <th>아이슬란드</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2001</th>\n","      <td>6192</td>\n","      <td>5318</td>\n","      <td>6806</td>\n","      <td>7402</td>\n","      <td>7907</td>\n","      <td>7879</td>\n","      <td>10335</td>\n","      <td>5607</td>\n","      <td>12896</td>\n","      <td>26947</td>\n","    </tr>\n","    <tr>\n","      <th>2002</th>\n","      <td>6158</td>\n","      <td>5447</td>\n","      <td>6742</td>\n","      <td>7366</td>\n","      <td>8220</td>\n","      <td>8046</td>\n","      <td>10502</td>\n","      <td>6495</td>\n","      <td>13228</td>\n","      <td>27764</td>\n","    </tr>\n","    <tr>\n","      <th>2003</th>\n","      <td>6231</td>\n","      <td>5576</td>\n","      <td>6898</td>\n","      <td>7624</td>\n","      <td>7816</td>\n","      <td>8044</td>\n","      <td>10642</td>\n","      <td>7007</td>\n","      <td>13066</td>\n","      <td>27630</td>\n","    </tr>\n","    <tr>\n","      <th>2004</th>\n","      <td>6206</td>\n","      <td>5644</td>\n","      <td>7030</td>\n","      <td>7689</td>\n","      <td>8076</td>\n","      <td>8204</td>\n","      <td>11126</td>\n","      <td>7391</td>\n","      <td>13338</td>\n","      <td>28126</td>\n","    </tr>\n","    <tr>\n","      <th>2005</th>\n","      <td>6254</td>\n","      <td>5676</td>\n","      <td>7111</td>\n","      <td>7707</td>\n","      <td>8233</td>\n","      <td>8365</td>\n","      <td>11439</td>\n","      <td>7779</td>\n","      <td>13640</td>\n","      <td>28057</td>\n","    </tr>\n","    <tr>\n","      <th>2006</th>\n","      <td>6192</td>\n","      <td>5762</td>\n","      <td>7175</td>\n","      <td>7585</td>\n","      <td>8220</td>\n","      <td>8381</td>\n","      <td>11309</td>\n","      <td>8063</td>\n","      <td>13515</td>\n","      <td>31306</td>\n","    </tr>\n","    <tr>\n","      <th>2007</th>\n","      <td>6142</td>\n","      <td>5718</td>\n","      <td>7185</td>\n","      <td>7573</td>\n","      <td>8475</td>\n","      <td>8477</td>\n","      <td>11216</td>\n","      <td>8502</td>\n","      <td>13616</td>\n","      <td>36920</td>\n","    </tr>\n","    <tr>\n","      <th>2008</th>\n","      <td>6067</td>\n","      <td>5656</td>\n","      <td>7148</td>\n","      <td>7703</td>\n","      <td>8072</td>\n","      <td>8486</td>\n","      <td>11174</td>\n","      <td>8853</td>\n","      <td>13647</td>\n","      <td>49818</td>\n","    </tr>\n","    <tr>\n","      <th>2009</th>\n","      <td>5693</td>\n","      <td>5271</td>\n","      <td>6781</td>\n","      <td>7494</td>\n","      <td>7833</td>\n","      <td>8012</td>\n","      <td>11038</td>\n","      <td>8980</td>\n","      <td>12884</td>\n","      <td>51179</td>\n","    </tr>\n","    <tr>\n","      <th>2010</th>\n","      <td>5741</td>\n","      <td>5384</td>\n","      <td>7217</td>\n","      <td>7756</td>\n","      <td>8399</td>\n","      <td>8315</td>\n","      <td>10063</td>\n","      <td>9851</td>\n","      <td>13361</td>\n","      <td>51447</td>\n","    </tr>\n","    <tr>\n","      <th>2011</th>\n","      <td>5518</td>\n","      <td>5393</td>\n","      <td>7083</td>\n","      <td>7318</td>\n","      <td>7847</td>\n","      <td>8226</td>\n","      <td>10514</td>\n","      <td>10162</td>\n","      <td>13227</td>\n","      <td>52376</td>\n","    </tr>\n","    <tr>\n","      <th>2012</th>\n","      <td>5452</td>\n","      <td>5277</td>\n","      <td>7138</td>\n","      <td>7367</td>\n","      <td>7753</td>\n","      <td>8089</td>\n","      <td>10218</td>\n","      <td>10346</td>\n","      <td>12947</td>\n","      <td>53156</td>\n","    </tr>\n","    <tr>\n","      <th>2013</th>\n","      <td>5409</td>\n","      <td>5124</td>\n","      <td>7022</td>\n","      <td>7382</td>\n","      <td>7836</td>\n","      <td>8072</td>\n","      <td>10067</td>\n","      <td>10428</td>\n","      <td>12987</td>\n","      <td>54759</td>\n","    </tr>\n","    <tr>\n","      <th>2014</th>\n","      <td>5131</td>\n","      <td>5002</td>\n","      <td>7035</td>\n","      <td>6955</td>\n","      <td>7829</td>\n","      <td>8028</td>\n","      <td>10002</td>\n","      <td>10564</td>\n","      <td>12962</td>\n","      <td>53896</td>\n","    </tr>\n","    <tr>\n","      <th>2015</th>\n","      <td>5082</td>\n","      <td>5099</td>\n","      <td>7015</td>\n","      <td>7043</td>\n","      <td>7865</td>\n","      <td>8016</td>\n","      <td>9892</td>\n","      <td>10558</td>\n","      <td>12833</td>\n","      <td>55054</td>\n","    </tr>\n","    <tr>\n","      <th>2016</th>\n","      <td>5033</td>\n","      <td>5081</td>\n","      <td>6956</td>\n","      <td>7148</td>\n","      <td>7974</td>\n","      <td>8048</td>\n","      <td>9911</td>\n","      <td>10618</td>\n","      <td>12825</td>\n","      <td>53913</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>4951</td>\n","      <td>5202</td>\n","      <td>6947</td>\n","      <td>7209</td>\n","      <td>8111</td>\n","      <td>7992</td>\n","      <td>9922</td>\n","      <td>10654</td>\n","      <td>12573</td>\n","      <td>54366</td>\n","    </tr>\n","    <tr>\n","      <th>2018</th>\n","      <td>4906</td>\n","      <td>5220</td>\n","      <td>6848</td>\n","      <td>7141</td>\n","      <td>8010</td>\n","      <td>8165</td>\n","      <td>9906</td>\n","      <td>11082</td>\n","      <td>13098</td>\n","      <td>54605</td>\n","    </tr>\n","    <tr>\n","      <th>2019</th>\n","      <td>4750</td>\n","      <td>5207</td>\n","      <td>6606</td>\n","      <td>7043</td>\n","      <td>7935</td>\n","      <td>7773</td>\n","      <td>9897</td>\n","      <td>10878</td>\n","      <td>12744</td>\n","      <td>52514</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1cde1683-c990-4633-a601-97ed5323a170')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1cde1683-c990-4633-a601-97ed5323a170 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1cde1683-c990-4633-a601-97ed5323a170');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-590e7ad4-fd43-476a-b9b5-99f7934caf29\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-590e7ad4-fd43-476a-b9b5-99f7934caf29')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-590e7ad4-fd43-476a-b9b5-99f7934caf29 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_25e48545-d281-409f-a80f-f68ca2efab18\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('oecd_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_25e48545-d281-409f-a80f-f68ca2efab18 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('oecd_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"oecd_data","summary":"{\n  \"name\": \"oecd_data\",\n  \"rows\": 19,\n  \"fields\": [\n    {\n      \"column\": \"\\uc601\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 538,\n        \"min\": 4750,\n        \"max\": 6254,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          6192,\n          6158,\n          5741\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc774\\ud0c8\\ub9ac\\uc544\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 238,\n        \"min\": 5002,\n        \"max\": 5762,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          5318,\n          5762,\n          5277\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub3c5\\uc77c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 169,\n        \"min\": 6606,\n        \"max\": 7217,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          6806,\n          7175,\n          7138\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud504\\ub791\\uc2a4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 252,\n        \"min\": 6955,\n        \"max\": 7756,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          7402,\n          7366,\n          7494\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc77c\\ubcf8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 208,\n        \"min\": 7753,\n        \"max\": 8475,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          7907,\n          8220,\n          8399\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OECD\\ud3c9\\uade0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 195,\n        \"min\": 7773,\n        \"max\": 8486,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          7879,\n          8381,\n          8089\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud638\\uc8fc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 562,\n        \"min\": 9892,\n        \"max\": 11439,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          10335,\n          11309,\n          10218\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud55c\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1676,\n        \"min\": 5607,\n        \"max\": 11082,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          5607,\n          8063,\n          10346\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubbf8\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 322,\n        \"min\": 12573,\n        \"max\": 13647,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          12896,\n          13515,\n          12947\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc544\\uc774\\uc2ac\\ub780\\ub4dc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11920,\n        \"min\": 26947,\n        \"max\": 55054,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          26947,\n          31306,\n          53156\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["# 컬럼 순서 변경 & 주요 국가만 추출\n","\n","oecd_data = oecd_data[['OECD평균', '한국', '미국', '호주','일본', '프랑스', '독일', '영국', '이탈리아']]\n","oecd_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"7DciYOOpiT4b","executionInfo":{"status":"ok","timestamp":1723536356043,"user_tz":-540,"elapsed":4,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"ed615f2a-17c7-47c7-e753-4b763eb9cc1f"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["index  OECD평균    한국     미국     호주    일본   프랑스    독일    영국  이탈리아\n","2001     7879  5607  12896  10335  7907  7402  6806  6192  5318\n","2002     8046  6495  13228  10502  8220  7366  6742  6158  5447\n","2003     8044  7007  13066  10642  7816  7624  6898  6231  5576\n","2004     8204  7391  13338  11126  8076  7689  7030  6206  5644\n","2005     8365  7779  13640  11439  8233  7707  7111  6254  5676"],"text/html":["\n","  <div id=\"df-4c501660-879c-43c6-aaae-ec8f4e765f7a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>index</th>\n","      <th>OECD평균</th>\n","      <th>한국</th>\n","      <th>미국</th>\n","      <th>호주</th>\n","      <th>일본</th>\n","      <th>프랑스</th>\n","      <th>독일</th>\n","      <th>영국</th>\n","      <th>이탈리아</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2001</th>\n","      <td>7879</td>\n","      <td>5607</td>\n","      <td>12896</td>\n","      <td>10335</td>\n","      <td>7907</td>\n","      <td>7402</td>\n","      <td>6806</td>\n","      <td>6192</td>\n","      <td>5318</td>\n","    </tr>\n","    <tr>\n","      <th>2002</th>\n","      <td>8046</td>\n","      <td>6495</td>\n","      <td>13228</td>\n","      <td>10502</td>\n","      <td>8220</td>\n","      <td>7366</td>\n","      <td>6742</td>\n","      <td>6158</td>\n","      <td>5447</td>\n","    </tr>\n","    <tr>\n","      <th>2003</th>\n","      <td>8044</td>\n","      <td>7007</td>\n","      <td>13066</td>\n","      <td>10642</td>\n","      <td>7816</td>\n","      <td>7624</td>\n","      <td>6898</td>\n","      <td>6231</td>\n","      <td>5576</td>\n","    </tr>\n","    <tr>\n","      <th>2004</th>\n","      <td>8204</td>\n","      <td>7391</td>\n","      <td>13338</td>\n","      <td>11126</td>\n","      <td>8076</td>\n","      <td>7689</td>\n","      <td>7030</td>\n","      <td>6206</td>\n","      <td>5644</td>\n","    </tr>\n","    <tr>\n","      <th>2005</th>\n","      <td>8365</td>\n","      <td>7779</td>\n","      <td>13640</td>\n","      <td>11439</td>\n","      <td>8233</td>\n","      <td>7707</td>\n","      <td>7111</td>\n","      <td>6254</td>\n","      <td>5676</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4c501660-879c-43c6-aaae-ec8f4e765f7a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4c501660-879c-43c6-aaae-ec8f4e765f7a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4c501660-879c-43c6-aaae-ec8f4e765f7a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-46e0b8a2-8436-438e-86de-bd98c7c7633e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-46e0b8a2-8436-438e-86de-bd98c7c7633e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-46e0b8a2-8436-438e-86de-bd98c7c7633e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"oecd_data","summary":"{\n  \"name\": \"oecd_data\",\n  \"rows\": 19,\n  \"fields\": [\n    {\n      \"column\": \"OECD\\ud3c9\\uade0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 195,\n        \"min\": 7773,\n        \"max\": 8486,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          7879,\n          8381,\n          8089\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud55c\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1676,\n        \"min\": 5607,\n        \"max\": 11082,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          5607,\n          8063,\n          10346\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubbf8\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 322,\n        \"min\": 12573,\n        \"max\": 13647,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          12896,\n          13515,\n          12947\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud638\\uc8fc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 562,\n        \"min\": 9892,\n        \"max\": 11439,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          10335,\n          11309,\n          10218\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc77c\\ubcf8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 208,\n        \"min\": 7753,\n        \"max\": 8475,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          7907,\n          8220,\n          8399\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud504\\ub791\\uc2a4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 252,\n        \"min\": 6955,\n        \"max\": 7756,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          7402,\n          7366,\n          7494\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub3c5\\uc77c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 169,\n        \"min\": 6606,\n        \"max\": 7217,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          6806,\n          7175,\n          7138\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc601\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 538,\n        \"min\": 4750,\n        \"max\": 6254,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          6192,\n          6158,\n          5741\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc774\\ud0c8\\ub9ac\\uc544\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 238,\n        \"min\": 5002,\n        \"max\": 5762,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          5318,\n          5762,\n          5277\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["oecd_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":645},"id":"FaTb-KABi2Mz","executionInfo":{"status":"ok","timestamp":1723536356043,"user_tz":-540,"elapsed":3,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"1a239def-9c57-44b4-cb93-817ff3021648"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["index  OECD평균     한국     미국     호주    일본   프랑스    독일    영국  이탈리아\n","2001     7879   5607  12896  10335  7907  7402  6806  6192  5318\n","2002     8046   6495  13228  10502  8220  7366  6742  6158  5447\n","2003     8044   7007  13066  10642  7816  7624  6898  6231  5576\n","2004     8204   7391  13338  11126  8076  7689  7030  6206  5644\n","2005     8365   7779  13640  11439  8233  7707  7111  6254  5676\n","2006     8381   8063  13515  11309  8220  7585  7175  6192  5762\n","2007     8477   8502  13616  11216  8475  7573  7185  6142  5718\n","2008     8486   8853  13647  11174  8072  7703  7148  6067  5656\n","2009     8012   8980  12884  11038  7833  7494  6781  5693  5271\n","2010     8315   9851  13361  10063  8399  7756  7217  5741  5384\n","2011     8226  10162  13227  10514  7847  7318  7083  5518  5393\n","2012     8089  10346  12947  10218  7753  7367  7138  5452  5277\n","2013     8072  10428  12987  10067  7836  7382  7022  5409  5124\n","2014     8028  10564  12962  10002  7829  6955  7035  5131  5002\n","2015     8016  10558  12833   9892  7865  7043  7015  5082  5099\n","2016     8048  10618  12825   9911  7974  7148  6956  5033  5081\n","2017     7992  10654  12573   9922  8111  7209  6947  4951  5202\n","2018     8165  11082  13098   9906  8010  7141  6848  4906  5220\n","2019     7773  10878  12744   9897  7935  7043  6606  4750  5207"],"text/html":["\n","  <div id=\"df-4b965cfe-7c6c-4859-a3b9-d221a378a3a0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>index</th>\n","      <th>OECD평균</th>\n","      <th>한국</th>\n","      <th>미국</th>\n","      <th>호주</th>\n","      <th>일본</th>\n","      <th>프랑스</th>\n","      <th>독일</th>\n","      <th>영국</th>\n","      <th>이탈리아</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2001</th>\n","      <td>7879</td>\n","      <td>5607</td>\n","      <td>12896</td>\n","      <td>10335</td>\n","      <td>7907</td>\n","      <td>7402</td>\n","      <td>6806</td>\n","      <td>6192</td>\n","      <td>5318</td>\n","    </tr>\n","    <tr>\n","      <th>2002</th>\n","      <td>8046</td>\n","      <td>6495</td>\n","      <td>13228</td>\n","      <td>10502</td>\n","      <td>8220</td>\n","      <td>7366</td>\n","      <td>6742</td>\n","      <td>6158</td>\n","      <td>5447</td>\n","    </tr>\n","    <tr>\n","      <th>2003</th>\n","      <td>8044</td>\n","      <td>7007</td>\n","      <td>13066</td>\n","      <td>10642</td>\n","      <td>7816</td>\n","      <td>7624</td>\n","      <td>6898</td>\n","      <td>6231</td>\n","      <td>5576</td>\n","    </tr>\n","    <tr>\n","      <th>2004</th>\n","      <td>8204</td>\n","      <td>7391</td>\n","      <td>13338</td>\n","      <td>11126</td>\n","      <td>8076</td>\n","      <td>7689</td>\n","      <td>7030</td>\n","      <td>6206</td>\n","      <td>5644</td>\n","    </tr>\n","    <tr>\n","      <th>2005</th>\n","      <td>8365</td>\n","      <td>7779</td>\n","      <td>13640</td>\n","      <td>11439</td>\n","      <td>8233</td>\n","      <td>7707</td>\n","      <td>7111</td>\n","      <td>6254</td>\n","      <td>5676</td>\n","    </tr>\n","    <tr>\n","      <th>2006</th>\n","      <td>8381</td>\n","      <td>8063</td>\n","      <td>13515</td>\n","      <td>11309</td>\n","      <td>8220</td>\n","      <td>7585</td>\n","      <td>7175</td>\n","      <td>6192</td>\n","      <td>5762</td>\n","    </tr>\n","    <tr>\n","      <th>2007</th>\n","      <td>8477</td>\n","      <td>8502</td>\n","      <td>13616</td>\n","      <td>11216</td>\n","      <td>8475</td>\n","      <td>7573</td>\n","      <td>7185</td>\n","      <td>6142</td>\n","      <td>5718</td>\n","    </tr>\n","    <tr>\n","      <th>2008</th>\n","      <td>8486</td>\n","      <td>8853</td>\n","      <td>13647</td>\n","      <td>11174</td>\n","      <td>8072</td>\n","      <td>7703</td>\n","      <td>7148</td>\n","      <td>6067</td>\n","      <td>5656</td>\n","    </tr>\n","    <tr>\n","      <th>2009</th>\n","      <td>8012</td>\n","      <td>8980</td>\n","      <td>12884</td>\n","      <td>11038</td>\n","      <td>7833</td>\n","      <td>7494</td>\n","      <td>6781</td>\n","      <td>5693</td>\n","      <td>5271</td>\n","    </tr>\n","    <tr>\n","      <th>2010</th>\n","      <td>8315</td>\n","      <td>9851</td>\n","      <td>13361</td>\n","      <td>10063</td>\n","      <td>8399</td>\n","      <td>7756</td>\n","      <td>7217</td>\n","      <td>5741</td>\n","      <td>5384</td>\n","    </tr>\n","    <tr>\n","      <th>2011</th>\n","      <td>8226</td>\n","      <td>10162</td>\n","      <td>13227</td>\n","      <td>10514</td>\n","      <td>7847</td>\n","      <td>7318</td>\n","      <td>7083</td>\n","      <td>5518</td>\n","      <td>5393</td>\n","    </tr>\n","    <tr>\n","      <th>2012</th>\n","      <td>8089</td>\n","      <td>10346</td>\n","      <td>12947</td>\n","      <td>10218</td>\n","      <td>7753</td>\n","      <td>7367</td>\n","      <td>7138</td>\n","      <td>5452</td>\n","      <td>5277</td>\n","    </tr>\n","    <tr>\n","      <th>2013</th>\n","      <td>8072</td>\n","      <td>10428</td>\n","      <td>12987</td>\n","      <td>10067</td>\n","      <td>7836</td>\n","      <td>7382</td>\n","      <td>7022</td>\n","      <td>5409</td>\n","      <td>5124</td>\n","    </tr>\n","    <tr>\n","      <th>2014</th>\n","      <td>8028</td>\n","      <td>10564</td>\n","      <td>12962</td>\n","      <td>10002</td>\n","      <td>7829</td>\n","      <td>6955</td>\n","      <td>7035</td>\n","      <td>5131</td>\n","      <td>5002</td>\n","    </tr>\n","    <tr>\n","      <th>2015</th>\n","      <td>8016</td>\n","      <td>10558</td>\n","      <td>12833</td>\n","      <td>9892</td>\n","      <td>7865</td>\n","      <td>7043</td>\n","      <td>7015</td>\n","      <td>5082</td>\n","      <td>5099</td>\n","    </tr>\n","    <tr>\n","      <th>2016</th>\n","      <td>8048</td>\n","      <td>10618</td>\n","      <td>12825</td>\n","      <td>9911</td>\n","      <td>7974</td>\n","      <td>7148</td>\n","      <td>6956</td>\n","      <td>5033</td>\n","      <td>5081</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>7992</td>\n","      <td>10654</td>\n","      <td>12573</td>\n","      <td>9922</td>\n","      <td>8111</td>\n","      <td>7209</td>\n","      <td>6947</td>\n","      <td>4951</td>\n","      <td>5202</td>\n","    </tr>\n","    <tr>\n","      <th>2018</th>\n","      <td>8165</td>\n","      <td>11082</td>\n","      <td>13098</td>\n","      <td>9906</td>\n","      <td>8010</td>\n","      <td>7141</td>\n","      <td>6848</td>\n","      <td>4906</td>\n","      <td>5220</td>\n","    </tr>\n","    <tr>\n","      <th>2019</th>\n","      <td>7773</td>\n","      <td>10878</td>\n","      <td>12744</td>\n","      <td>9897</td>\n","      <td>7935</td>\n","      <td>7043</td>\n","      <td>6606</td>\n","      <td>4750</td>\n","      <td>5207</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4b965cfe-7c6c-4859-a3b9-d221a378a3a0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4b965cfe-7c6c-4859-a3b9-d221a378a3a0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4b965cfe-7c6c-4859-a3b9-d221a378a3a0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f388f898-bc67-4029-a679-9d4d4d54a37f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f388f898-bc67-4029-a679-9d4d4d54a37f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f388f898-bc67-4029-a679-9d4d4d54a37f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_3a7858d2-de99-4024-be3b-a51d0e181894\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('oecd_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3a7858d2-de99-4024-be3b-a51d0e181894 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('oecd_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"oecd_data","summary":"{\n  \"name\": \"oecd_data\",\n  \"rows\": 19,\n  \"fields\": [\n    {\n      \"column\": \"OECD\\ud3c9\\uade0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 195,\n        \"min\": 7773,\n        \"max\": 8486,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          7879,\n          8381,\n          8089\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud55c\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1676,\n        \"min\": 5607,\n        \"max\": 11082,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          5607,\n          8063,\n          10346\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubbf8\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 322,\n        \"min\": 12573,\n        \"max\": 13647,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          12896,\n          13515,\n          12947\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud638\\uc8fc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 562,\n        \"min\": 9892,\n        \"max\": 11439,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          10335,\n          11309,\n          10218\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc77c\\ubcf8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 208,\n        \"min\": 7753,\n        \"max\": 8475,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          7907,\n          8220,\n          8399\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud504\\ub791\\uc2a4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 252,\n        \"min\": 6955,\n        \"max\": 7756,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          7402,\n          7366,\n          7494\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub3c5\\uc77c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 169,\n        \"min\": 6606,\n        \"max\": 7217,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          6806,\n          7175,\n          7138\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc601\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 538,\n        \"min\": 4750,\n        \"max\": 6254,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          6192,\n          6158,\n          5741\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc774\\ud0c8\\ub9ac\\uc544\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 238,\n        \"min\": 5002,\n        \"max\": 5762,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          5318,\n          5762,\n          5277\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# 선택한 국가들의 연도별 1인당 전력 소비량을 꺾은선 그래프로 그리는 함수\n","\n","def plot_energy_consumption(data, countries):\n","\n","    # 연도를 x축으로 설정\n","    years = data.index\n","\n","    # 국가별로 꺾은선 그래프 그리기\n","    plt.figure(figsize=(12, 8))\n","    for country in countries:\n","        plt.plot(years, data[country], marker='o', label=country)\n","\n","    plt.title('주요 국가 1인당 전력 소비량 (2001-2019)')\n","    plt.xlabel('년도')\n","    plt.ylabel('1인당 전력 소비량 (kWh)')\n","    plt.xticks(rotation=45)\n","    plt.legend()\n","    plt.grid(True)\n","    plt.show()\n","\n","# 함수 호출\n","plot_energy_consumption(oecd_data, ['OECD평균','한국', '미국'])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"4or31q5YjO6-","executionInfo":{"status":"ok","timestamp":1723536357503,"user_tz":-540,"elapsed":1462,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"d0abbdeb-3690-4261-c373-d7ebe477f9a8"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# 2001~2019년 연평균 전력 소비량 막대 그래프\n","\n","def plot_avg_energy_consumption(data):\n","\n","    # 막대 그래프 그리기\n","    plt.figure(figsize=(8, 6))\n","    plt.bar(data.mean().index, data.mean().values, color=['r', 'g', 'b', 'c', 'm','y','pink', 'navy','gold']) # bars =\n","\n","    plt.title('2001-2019년 평균 전력 소비량 비교')\n","    plt.xlabel('국가')\n","    plt.ylabel('평균 전력 소비량 (kWh)')\n","    plt.xticks(rotation=45)\n","\n","    # for bar in bars:\n","    #     height = bar.get_height()\n","    #     plt.text(bar.get_x() + bar.get_width() / 2.0, height, f'{int(height)}', ha='center', va='bottom')\n","\n","    plt.show()\n","\n","\n","plot_avg_energy_consumption(oecd_data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"YpyP8DsDkAlr","executionInfo":{"status":"ok","timestamp":1723536361583,"user_tz":-540,"elapsed":706,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"42383a2f-f1c6-4ae3-8a61-40309bcac27d"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"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IiMjlZubqxYtWpg127dvV3Z2tlmzefNm3X777apSpYpZk/958mryngcAAACuxakhOT09XXFxcYqLi5P058V6cXFxOnHihGw2m0aNGqW3335b69ev1759+/TUU08pMDDQXAGjfv366tKli5555hnFxMRox44dGj58uPr27avAwEBJ0uOPPy5PT0+Fh4dr//79WrlypT744AONGTPG7GPkyJHatGmTpk+frkOHDun111/XTz/9pOHDh1/rlwQAAAClgFOXgIuKilLHjh0LbO/fv78WLVokwzA0ceJELViwQOfOnVObNm300UcfqV69emZtcnKyhg8frg0bNsjNzU09e/bUrFmzVLFiRbNm7969GjZsmHbt2qUbbrhBI0aM0NixY+2ec/Xq1frb3/6mX3/9VbfddpumTp2qrl27FnkWR5YUAYoDS8BFlUgfzsIScABQ8hzJa6VmneTrHSEZ1xohOapE+nAWQjIAlLwysU4yAAAA4CyEZAAAAMCCkAwAAABYEJIBAAAAC0IyAAAAYEFIBgAAACwIyQAAAIAFIRkAAACwICQDAAAAFoRkAAAAwIKQDAAAAFgQkgEAAAALQjIAAABgQUgGAAAALAjJAAAAgAUhGQAAALAgJAMAAAAWhGQAAADAgpAMAAAAWBCSAQAAAAtCMgAAAGDh7uwGgCtle8Pm7BaKlTHRcHYLAADg/3EkGQAAALAgJAMAAAAWhGQAAADAgpAMAAAAWBCSAQAAAAtCMgAAAGBBSAYAAAAsCMkAAACABSEZAAAAsCAkAwAAABaEZAAAAMCCkAwAAABYEJIBAAAAC0IyAAAAYEFIBgAAACwIyQAAAIAFIRkAAACwICQDAAAAFoRkAAAAwIKQDAAAAFhcdUjOzMwsjj4AAACAUsPhkPz111+rf//+uuWWW+Th4aEKFSrI19dX7du31zvvvKOTJ0+WRJ8AAADANVPkkLx27VrVq1dPAwcOlLu7u8aOHasvvvhC33zzjRYuXKj27dvru+++0y233KLnnntOZ86cKcm+AQAAgBLjXtTCqVOnaubMmbr//vvl5lYwW/fu3VuS9Ntvv2n27NlaunSpRo8eXXydAgAAANdIkUNydHR0kepq1KihyZMnX3FDAAAAgLOxugUAAABgUeQjyfnl5ORo0aJF2rJli06fPq3c3Fy7/ZGRkcXSHAAAAOAMVxSSR44cqUWLFqlbt2668847ZbPZirsvAAAAwGmuKCSvWLFCq1atUteuXYu7HwAAAMDpruicZE9PT9WtW7e4ewEAAABKhSsKyS+88II++OADGYZR3P0AAAAATlfk0y0eeeQRu9uRkZH6+uuv1bBhQ3l4eNjt++KLL4qnOwAAAMAJihyS/fz87G4//PDDxd4MAAAAUBoUOSR/9tlnJdkHrkRZW1WE03cAAEAp4dA5yRMnTtT27duVlZVVUv3YycnJ0WuvvaY6derI29tbt956q9566y27c6ENw9CECRNUvXp1eXt7KzQ0VEePHrV7nOTkZPXr10++vr6qXLmywsPDlZ6eblezd+9etW3bVuXLl1dQUJCmTp16TWYEAABA6eNQSF68eLE6dOigypUr67777tPbb7+tHTt26OLFiyXS3JQpUzR37lx9+OGHOnjwoKZMmaKpU6dq9uzZZs3UqVM1a9YszZs3Tzt37pSPj4/CwsJ04cIFs6Zfv37av3+/Nm/erIiICG3fvl2DBw8296empqpz586qXbu2YmNjNW3aNL3++utasGBBicwFAACA0s1mOLhExa+//qqtW7cqKipK27Zt04kTJ+Tj46PWrVurY8eO6tixo5o3b14szT3wwAPy9/fXJ598Ym7r2bOnvL29tXTpUhmGocDAQL3wwgt68cUXJUkpKSny9/fXokWL1LdvXx08eFANGjTQrl27FBwcLEnatGmTunbtqoSEBAUGBmru3Ll69dVXlZiYKE9PT0nSuHHjtG7dOh06dKjQ3jIzM5WZmWneTk1NVVBQkFJSUuTr61ss81+Wi59uYXujbM1vTHRw/rI1vsNn29iiokqkD2cxOnRwdgsAUOalpqbKz8+vSHnN4S8TufnmmzVgwAANGDBAknTs2DEzNL/77rt69dVXi+3IcqtWrbRgwQIdOXJE9erV07/+9S99//33mjFjhvnciYmJCg0NNe/j5+enFi1aKDo6Wn379lV0dLQqV65sBmRJCg0NlZubm3bu3KmHH35Y0dHRateunRmQJSksLExTpkzR2bNnVaVKlQK9TZo0SW+88UaxzAkAVyLKFuXsFopNB6ODs1sAADtX9I17eY4fP67t27dr27Zt2r59u7Kzs9WuXbvi6k3jxo1Tamqq7rjjDpUrV045OTl655131K9fP0lSYmKiJMnf39/ufv7+/ua+xMRE3XTTTXb73d3dVbVqVbuaOnXqFHiMvH2FheTx48drzJgx5u28I8kAAAC4/jkUkk+cOKGoqCjzyPF///tftWrVSu3bt9czzzyj5s2b2x2NvVqrVq3SsmXLtHz5cjVs2FBxcXEaNWqUAgMD1b9//2J7nivh5eUlLy8vp/YAAACAkuFQSL755ptVq1YtDRkyREOGDFHTpk1Vrly5kupNL730ksaNG6e+fftKkho1aqTjx49r0qRJ6t+/vwICAiRJSUlJql69unm/pKQkNWnSRJIUEBCg06dP2z3uxYsXlZycbN4/ICBASUlJdjV5t/NqAAAA4DocWt2id+/eyszM1JQpU/T222/r/fff1+7du0vs66n/+OMPubnZt1iuXDnl5uZKkurUqaOAgABt2bLF3J+amqqdO3cqJCREkhQSEqJz584pNjbWrImMjFRubq5atGhh1uSdLpJn8+bNuv322ws91QIAAABlm0MhecWKFTp16pR++OEH3X///YqJiVHXrl1VpUoVPfDAA5o2bZp27dpVbM11795d77zzjjZu3Khff/1Va9eu1YwZM8xv+7PZbBo1apTefvttrV+/Xvv27dNTTz2lwMBA9ejRQ5JUv359denSRc8884xiYmK0Y8cODR8+XH379lVgYKAk6fHHH5enp6fCw8O1f/9+rVy5Uh988IHdOccAAABwHQ4vAVeYAwcOaPny5Zo9e7YyMjKKbXWLtLQ0vfbaa1q7dq1Onz6twMBAPfbYY5owYYJ57rNhGJo4caIWLFigc+fOqU2bNvroo49Ur14983GSk5M1fPhwbdiwQW5uburZs6dmzZqlihUrmjV79+7VsGHDtGvXLt1www0aMWKExo4dW+ReHVlSpNi4+BpgLAFXQo04CUvAdXD4PqxuAQCOcSSvXXFITkpKUlRUlHkh35EjR+Tl5aWWLVtq69atV9T49YyQXAwIyQ7Vu/jbT0gWIRkAHFVi6ySvWrXKDMaHDx+Wh4eHmjVrpt69e6tjx45q1aoVKz4AAADguudQSH7iiScUHByshx9+WB07dlTr1q3l7e1dUr0BAAAATuFQSD579qx8fHz+sub8+fMEZwAAAFzXHFrdIi8gP//884Xuz8jIUNeuXa++KwAAAMCJHArJeTZu3KiJEyfabcvIyFCXLl2KbWULAAAAwFkcOt0iz7fffqu2bduqSpUqGjVqlNLS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GXLtmy5GzM/8rjx/fvHx8UZISIhx8OBBY9y4ccYLL7xgZGVlGfPmzTPeeustY+/eveb8+c9HPXLkiDF37lzj/fffNw4dOuSs9q+Iq7//rj5/YQq7WDXv/+/Y2Fjju+++MwYMGGD88MMPdvfLysoyf929e3fjs88+u5ZtlwhCMq5IXkDOW8XCMAxj+vTpRQ7KZ86cMZ544gmn/yaKj483WrdubV6xm9fff//737/8oMz/YdC+fXu71+F6wvzM78rz51fYigZDhw69bFDOe03S0tKMZ5991li0aNF1c9GSq7//rj5/YS53sWr+oPz000+bQTknJ8d8fT7//HOjRYsWxi+//OKcIYoRIRkOS0tLM8LCwow33nijwL4ZM2b8ZVDOC8uGYdh9+DhDRkaG0bhxY2PZsmWGYfzvit08l/qgzF/3xRdfmEeerjfMz/yuPH9+f7WiweWCct5/16xZY9x9993Gv//972s/wBVw9fff1ecvzIULF4zu3bsbK1asMLfl/wtf/qD8008/mUeUv//+e7Nm2bJlRkhIiLF///5r2ntJISTDIbm5ucbAgQONLl26mNuys7PtPlz+KigbhmGcPXvW6NSpk/HPf/7zmvVdmPPnzxuffvqpMWXKFLujR/lZPyh//PFHc9+yZcuMli1bGgcOHLhWLRcr5md+V54/z7lz54ymTZsaf//73w3D+N/nWf5wUFhQjouLM//Sv3Tp0uvutXD199/V57c6e/askZOTY8yfP9947733jD179hT4F2DDKDwoP/3008aRI0eMiIiIMvWaGAYhGVcgOjraGDp0qPH555+b2/L/s6NhFAzKjz76qFlXGgJynpSUFGPJkiXGa6+9Zp5/ZWX9oPzPf/5jbNiwoUx8GDA/87vy/PHx8Ubfvn2NkJAQo3Xr1kZ0dLRhGIWff1pYUD516pSxZMkSo1WrVtfla+Hq77+rz58nPj7e8PPzM4YPH16kc/Ctp15ERkYa9957r3HXXXeVmdckj80wytglmbgmdu7cqQULFqhz587q06ePJJlX99psNknSzJkztXXrVq1evVozZsxQTEyMMjIy9Nprr6lt27ZO690qNTVV69ev15EjR9SzZ081bty4QM2ZM2e0evVqffbZZ8rOzlalSpU0b968AuunXo+Yn/ldcf68FQ2mTZum48ePa/78+TIMQ7NmzVLz5s1lGIZs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1a1bV4cOHZKnp6ekP9c+bN++vZ544glt377dXMYtz+rVq/XPf/5Td911l7PaBgAAxSR/UF67dq1OnTql9evXa/bs2frkk0/UoEEDZ7dYanDhnotITU3VXXfdpWbNmmn16tV2+7799luNHTtW//nPfzRt2jS1atVKv//+u7Zu3app06Zp8eLF6tWrl5M6BwAAxY2LVS+Pc5JdQFpamu688061bdtWy5YtM7dv27ZN7u7u6ty5s2w2mz799FMNGTJEPj4+8vPzU+3atbVy5Up1796dVSwAAChDuFj18jiSXMZlZWWpXbt2Sk5O1sGDB1WuXDlJ0hdffKFHH31U69at04MPPmjW7927V6dPn1ZAQIBuvPFG+fv7c5EeAABwORxJLuMuXryogIAAeXh4aMGCBRoyZIi++uorDRgwQHPnztWDDz5od5S4sHOPCccAAMDVcCTZBaSkpGjUqFE6fPiwGjZsqBUrVmj27Nl6+umn7epiYmJUv359VapUyTmNAgAAlBKE5DLowoUL2rZtmw4ePCgfHx8FBwerSZMmGjJkiJYtW6YHHnhA//jHPyRJOTk5KleunJYsWaKRI0fqm2++UbNmzZw8AQAAgHNxukUZk5qaqk6dOunixYv6/fffderUKZUrV04DBw7UO++8o5ycHO3bt09z5szRM888I09PTy1ZskT9+/fXkiVLCMgAAAAiJJcpGRkZatGihRo1aqRp06apdu3a+ve//60lS5Zo8uTJOnfunObNm6cxY8Zo8eLFqlixoiQpPDxcy5Yt02OPPcZFegAAACIklykzZsxQjRo1tHTpUvPLQurWrasxY8bI399fzz//vG677TbNmTNHgwcP1oQJExQfH09ABgAAsOAb98qQAwcOKCgoSJ6ensrJyTG3+/n5qU+fPnrssce0ePFiubm5acaMGerYsaM2btxIQAYAALDgwr0ypH379qpatarWrl1rtz1vibetW7fqvvvu0549e9S4cWPzoj0CMgAAgD2OJJcBeSG3fv362rNnj/71r3/Z7csLvxcuXFDNmjUVEBAgSeYXi9hsNgIyAABAPoTkMiAv4D777LM6efKk3nvvPZ04ccLcl3fqxYEDB3TLLbfI3d1d/AMCAADApXHhXhly9913a86cORoxYoQyMjI0aNAgde3aVYmJifr222/16quvatWqVapWrZqzWwUAACjVOCe5jMnJydHq1as1ZMgQXbhwQRUqVFDNmjWVnp6uyZMnq1evXnanYAAAAKAgQnIZdezYMe3evVuHDh3SPffco1q1aqlhw4ZcpAcAAFAEhGQAAADAggv3AAAAAAtCMgAAAGBBSAYAAAAsCMkAAACABSEZAAAAsCAkAwAAABaEZAAAAMCCkAwAAABYEJIBAAAAC3dnNwAAcJ5t27bp2WefVfny5e225+bmqn379oqJiVFmZmaB+6Wnp2v//v3y8vK6Vq0CwDVFSAYAF3b+/Hn17dtXr7/+ut32X3/9VePGjZPNZlNcXFyB+3Xo0EGGYVybJgHACTjdAgAAALAgJAMAAAAWhGQAAADAgpAMAAAAWBCSAQAAAAtCMgAAAGBBSAYAAAAsCMkAAACABSEZAAAAsCAkAwAAABZ8LTUAuDA/Pz9FREQoIiKiwL6wsDCdO3dOwcHBhd7XzY3jLADKLpthGIazmwAAAABKEw4DAAAAABaEZAAAAMCCkAwAAABYEJIBAAAAC0IyAAAAYEFIBgAAACwIyQAAAIAFIRkAAACw+D/bkiFld/JL/QAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","k_data = oecd_data[['한국']]\n","k_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":645},"id":"gOuASfOewqNW","executionInfo":{"status":"ok","timestamp":1723536367531,"user_tz":-540,"elapsed":344,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"c66b866d-52e3-4059-8601-0a686a0e7e9c"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["index     한국\n","2001    5607\n","2002    6495\n","2003    7007\n","2004    7391\n","2005    7779\n","2006    8063\n","2007    8502\n","2008    8853\n","2009    8980\n","2010    9851\n","2011   10162\n","2012   10346\n","2013   10428\n","2014   10564\n","2015   10558\n","2016   10618\n","2017   10654\n","2018   11082\n","2019   10878"],"text/html":["\n","  <div id=\"df-b864ed4c-7d24-43f6-a280-9fbc40f8e497\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>index</th>\n","      <th>한국</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2001</th>\n","      <td>5607</td>\n","    </tr>\n","    <tr>\n","      <th>2002</th>\n","      <td>6495</td>\n","    </tr>\n","    <tr>\n","      <th>2003</th>\n","      <td>7007</td>\n","    </tr>\n","    <tr>\n","      <th>2004</th>\n","      <td>7391</td>\n","    </tr>\n","    <tr>\n","      <th>2005</th>\n","      <td>7779</td>\n","    </tr>\n","    <tr>\n","      <th>2006</th>\n","      <td>8063</td>\n","    </tr>\n","    <tr>\n","      <th>2007</th>\n","      <td>8502</td>\n","    </tr>\n","    <tr>\n","      <th>2008</th>\n","      <td>8853</td>\n","    </tr>\n","    <tr>\n","      <th>2009</th>\n","      <td>8980</td>\n","    </tr>\n","    <tr>\n","      <th>2010</th>\n","      <td>9851</td>\n","    </tr>\n","    <tr>\n","      <th>2011</th>\n","      <td>10162</td>\n","    </tr>\n","    <tr>\n","      <th>2012</th>\n","      <td>10346</td>\n","    </tr>\n","    <tr>\n","      <th>2013</th>\n","      <td>10428</td>\n","    </tr>\n","    <tr>\n","      <th>2014</th>\n","      <td>10564</td>\n","    </tr>\n","    <tr>\n","      <th>2015</th>\n","      <td>10558</td>\n","    </tr>\n","    <tr>\n","      <th>2016</th>\n","      <td>10618</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>10654</td>\n","    </tr>\n","    <tr>\n","      <th>2018</th>\n","      <td>11082</td>\n","    </tr>\n","    <tr>\n","      <th>2019</th>\n","      <td>10878</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b864ed4c-7d24-43f6-a280-9fbc40f8e497')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b864ed4c-7d24-43f6-a280-9fbc40f8e497 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b864ed4c-7d24-43f6-a280-9fbc40f8e497');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0acea1cc-b9ac-4dc7-af97-d7f7d3f596f2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0acea1cc-b9ac-4dc7-af97-d7f7d3f596f2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0acea1cc-b9ac-4dc7-af97-d7f7d3f596f2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7912b938-90ec-414d-96fc-70978ed41b42\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('k_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7912b938-90ec-414d-96fc-70978ed41b42 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('k_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"k_data","summary":"{\n  \"name\": \"k_data\",\n  \"rows\": 19,\n  \"fields\": [\n    {\n      \"column\": \"\\ud55c\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1676,\n        \"min\": 5607,\n        \"max\": 11082,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          5607,\n          8063,\n          10346\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["def plot_energy_consumption(data, countries):\n","\n","    # 연도를 x축으로 설정\n","    years = data.index\n","\n","    # 국가별로 꺾은선 그래프 그리기\n","    plt.figure(figsize=(12, 8))\n","    for country in countries:\n","        plt.plot(years, data[country], marker='o', label=country)\n","\n","    plt.title('주요 국가 1인당 전력 소비량 (2001-2019)')\n","    plt.xlabel('년도')\n","    plt.ylabel('1인당 전력 소비량 (kWh)')\n","    plt.xticks(rotation=45)\n","    plt.legend()\n","    plt.grid(True)\n","    plt.show()\n","\n","# 함수 호출\n","plot_energy_consumption(oecd_data, ['한국'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"CA0ZLbD_w4MV","executionInfo":{"status":"ok","timestamp":1723536528594,"user_tz":-540,"elapsed":1537,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"1e323ada-b35b-4810-80ac-f5e4c384aa9c"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"2AedbSJtxpje"},"execution_count":null,"outputs":[]}]}