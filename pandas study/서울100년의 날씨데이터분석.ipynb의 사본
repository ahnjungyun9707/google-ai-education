{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1NYoJoejaHyLHjwhVJ-GWdiQNVGSXFJMZ","timestamp":1723524575307}],"authorship_tag":"ABX9TyObR7B69idNHwWIpN6FhGxU"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WwYWOpNXSUcf","executionInfo":{"status":"ok","timestamp":1723524444569,"user_tz":-540,"elapsed":19306,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"e61f04ec-b07b-4f35-f258-93d295a8ee3d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","The following NEW packages will be installed:\n","  fonts-nanum\n","0 upgraded, 1 newly installed, 0 to remove and 45 not upgraded.\n","Need to get 10.3 MB of archives.\n","After this operation, 34.1 MB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu jammy/universe amd64 fonts-nanum all 20200506-1 [10.3 MB]\n","Fetched 10.3 MB in 1s (7,336 kB/s)\n","debconf: unable to initialize frontend: Dialog\n","debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 78, <> line 1.)\n","debconf: falling back to frontend: Readline\n","debconf: unable to initialize frontend: Readline\n","debconf: (This frontend requires a controlling tty.)\n","debconf: falling back to frontend: Teletype\n","dpkg-preconfigure: unable to re-open stdin: \n","Selecting previously unselected package fonts-nanum.\n","(Reading database ... 123594 files and directories currently installed.)\n","Preparing to unpack .../fonts-nanum_20200506-1_all.deb ...\n","Unpacking fonts-nanum (20200506-1) ...\n","Setting up fonts-nanum (20200506-1) ...\n","Processing triggers for fontconfig (2.13.1-4.2ubuntu5) ...\n","/usr/share/fonts: caching, new cache contents: 0 fonts, 1 dirs\n","/usr/share/fonts/truetype: caching, new cache contents: 0 fonts, 3 dirs\n","/usr/share/fonts/truetype/humor-sans: caching, new cache contents: 1 fonts, 0 dirs\n","/usr/share/fonts/truetype/liberation: caching, new cache contents: 16 fonts, 0 dirs\n","/usr/share/fonts/truetype/nanum: caching, new cache contents: 12 fonts, 0 dirs\n","/usr/local/share/fonts: caching, new cache contents: 0 fonts, 0 dirs\n","/root/.local/share/fonts: skipping, no such directory\n","/root/.fonts: skipping, no such directory\n","/usr/share/fonts/truetype: skipping, looped directory detected\n","/usr/share/fonts/truetype/humor-sans: skipping, looped directory detected\n","/usr/share/fonts/truetype/liberation: skipping, looped directory detected\n","/usr/share/fonts/truetype/nanum: skipping, looped directory detected\n","/var/cache/fontconfig: cleaning cache directory\n","/root/.cache/fontconfig: not cleaning non-existent cache directory\n","/root/.fontconfig: not cleaning non-existent cache directory\n","fc-cache: succeeded\n"]}],"source":["# 한글폰트 설치\n","!sudo apt-get install -y fonts-nanum\n","!sudo fc-cache -fv\n","!rm ~/.cache/matplotlib -rf"]},{"cell_type":"code","source":["# 나눔바른고딕체로 폰트\n","import matplotlib.pyplot as plt\n","plt.rc('font', family='NanumBarunGothic')"],"metadata":{"id":"oB2iCqGCS0RM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 데이터 파일을 가져오기 위해 구글 드라이브 마운트\n","from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ij-wd2qES0V8","executionInfo":{"status":"ok","timestamp":1723524462127,"user_tz":-540,"elapsed":17560,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"746f74b4-e5fa-41c2-9d91-d3de60978013"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["import os\n","\n","# 기본이되는 경로\n","dataPath = '/content/drive/MyDrive'\n","# 경로 문자열을 더할때\n","csvPath = os.path.join(dataPath, 'seoul.csv')\n","csvPath2 = os.path.join(dataPath, 'seoul2.csv')\n","csvPath3 = os.path.join(dataPath, 'seoul3.csv')"],"metadata":{"id":"ikT0EViIS0Y9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","df1 = pd.read_csv(csvPath, encoding='cp949')\n","df2 = pd.read_csv(csvPath2, encoding='cp949')\n","df3 = pd.read_csv(csvPath3, encoding='cp949')"],"metadata":{"id":"J2QIcL_JS0d8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"FH-iAGqQS0xk","executionInfo":{"status":"ok","timestamp":1723524464411,"user_tz":-540,"elapsed":9,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"60c9f0cd-0ebf-416c-fe08-1372bbd9a4d6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           날짜   지점  평균기온(℃)  최저기온(℃)  최고기온(℃)\n","0  1907-10-01  108     13.5      7.9     20.7\n","1  1907-10-02  108     16.2      7.9     22.0\n","2  1907-10-03  108     16.2     13.1     21.3\n","3  1907-10-04  108     16.5     11.2     22.0\n","4  1907-10-05  108     17.6     10.9     25.4"],"text/html":["\n","  <div id=\"df-930a4aae-8b32-4192-84de-6e9ca54ad5f0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>날짜</th>\n","      <th>지점</th>\n","      <th>평균기온(℃)</th>\n","      <th>최저기온(℃)</th>\n","      <th>최고기온(℃)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1907-10-01</td>\n","      <td>108</td>\n","      <td>13.5</td>\n","      <td>7.9</td>\n","      <td>20.7</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1907-10-02</td>\n","      <td>108</td>\n","      <td>16.2</td>\n","      <td>7.9</td>\n","      <td>22.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1907-10-03</td>\n","      <td>108</td>\n","      <td>16.2</td>\n","      <td>13.1</td>\n","      <td>21.3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1907-10-04</td>\n","      <td>108</td>\n","      <td>16.5</td>\n","      <td>11.2</td>\n","      <td>22.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1907-10-05</td>\n","      <td>108</td>\n","      <td>17.6</td>\n","      <td>10.9</td>\n","      <td>25.4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-930a4aae-8b32-4192-84de-6e9ca54ad5f0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-930a4aae-8b32-4192-84de-6e9ca54ad5f0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-930a4aae-8b32-4192-84de-6e9ca54ad5f0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-43aea564-b5fd-4777-9a82-daaf94e29d4e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-43aea564-b5fd-4777-9a82-daaf94e29d4e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-43aea564-b5fd-4777-9a82-daaf94e29d4e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df1","summary":"{\n  \"name\": \"df1\",\n  \"rows\": 39926,\n  \"fields\": [\n    {\n      \"column\": \"\\ub0a0\\uc9dc\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 39926,\n        \"samples\": [\n          \"1954-03-13\",\n          \"1931-10-25\",\n          \"1962-05-09\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc9c0\\uc810\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 108,\n        \"max\": 108,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          108\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud3c9\\uade0\\uae30\\uc628(\\u2103)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.664129370793443,\n        \"min\": -19.2,\n        \"max\": 33.1,\n        \"num_unique_values\": 487,\n        \"samples\": [\n          -4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd5c\\uc800\\uae30\\uc628(\\u2103)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.887584035612521,\n        \"min\": -23.1,\n        \"max\": 28.8,\n        \"num_unique_values\": 500,\n        \"samples\": [\n          -10.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd5c\\uace0\\uae30\\uc628(\\u2103)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.996620957986357,\n        \"min\": -16.3,\n        \"max\": 38.4,\n        \"num_unique_values\": 510,\n        \"samples\": [\n          36.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df2.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"uNOf3eYrS08M","executionInfo":{"status":"ok","timestamp":1723524464412,"user_tz":-540,"elapsed":8,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"d1977b55-41fe-4efe-c88a-fd50030f76c4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    지점 지점명          일시  평균기온(°C)  최저기온(°C)  최고기온(°C)\n","0  108  서울  2018-03-29      15.4      11.8      21.1\n","1  108  서울  2018-03-30      14.8       9.8      21.9\n","2  108  서울  2018-03-31      14.0       9.3      20.1\n","3  108  서울  2018-04-01      15.6      11.7      18.5\n","4  108  서울  2018-04-02      18.4      14.9      23.7"],"text/html":["\n","  <div id=\"df-b6089545-ecb8-4858-a60a-22c3d5ce9383\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>지점</th>\n","      <th>지점명</th>\n","      <th>일시</th>\n","      <th>평균기온(°C)</th>\n","      <th>최저기온(°C)</th>\n","      <th>최고기온(°C)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>2018-03-29</td>\n","      <td>15.4</td>\n","      <td>11.8</td>\n","      <td>21.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>2018-03-30</td>\n","      <td>14.8</td>\n","      <td>9.8</td>\n","      <td>21.9</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>2018-03-31</td>\n","      <td>14.0</td>\n","      <td>9.3</td>\n","      <td>20.1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>2018-04-01</td>\n","      <td>15.6</td>\n","      <td>11.7</td>\n","      <td>18.5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>2018-04-02</td>\n","      <td>18.4</td>\n","      <td>14.9</td>\n","      <td>23.7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b6089545-ecb8-4858-a60a-22c3d5ce9383')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b6089545-ecb8-4858-a60a-22c3d5ce9383 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b6089545-ecb8-4858-a60a-22c3d5ce9383');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-53bc17ee-12d6-413d-a8d8-844bb4c1fd75\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-53bc17ee-12d6-413d-a8d8-844bb4c1fd75')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-53bc17ee-12d6-413d-a8d8-844bb4c1fd75 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df2","summary":"{\n  \"name\": \"df2\",\n  \"rows\": 2323,\n  \"fields\": [\n    {\n      \"column\": \"\\uc9c0\\uc810\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 108,\n        \"max\": 108,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          108\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc9c0\\uc810\\uba85\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\uc11c\\uc6b8\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc77c\\uc2dc\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 2323,\n        \"samples\": [\n          \"2022-07-09\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud3c9\\uade0\\uae30\\uc628(\\u00b0C)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.352317671654248,\n        \"min\": -14.9,\n        \"max\": 33.7,\n        \"num_unique_values\": 415,\n        \"samples\": [\n          22.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd5c\\uc800\\uae30\\uc628(\\u00b0C)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.621593290277158,\n        \"min\": -18.6,\n        \"max\": 30.3,\n        \"num_unique_values\": 418,\n        \"samples\": [\n          8.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd5c\\uace0\\uae30\\uc628(\\u00b0C)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.357372763115649,\n        \"min\": -10.7,\n        \"max\": 39.6,\n        \"num_unique_values\": 420,\n        \"samples\": [\n          19.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df3.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"fP5ABog0S1Hk","executionInfo":{"status":"ok","timestamp":1723524464412,"user_tz":-540,"elapsed":8,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"652145b0-04b7-440b-9da8-b3fe2b139093"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    지점 지점명          일시  평균기온(°C)  최저기온(°C)  최고기온(°C)\n","0  108  서울  2024-08-06      29.5      25.6      33.5\n","1  108  서울  2024-08-07      29.6      27.2      33.4\n","2  108  서울  2024-08-08      28.5      26.9      31.6\n","3  108  서울  2024-08-09      29.3      25.6      33.6\n","4  108  서울  2024-08-10      30.0      26.4      33.6"],"text/html":["\n","  <div id=\"df-017366de-8b91-4783-812f-32e8210726a2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>지점</th>\n","      <th>지점명</th>\n","      <th>일시</th>\n","      <th>평균기온(°C)</th>\n","      <th>최저기온(°C)</th>\n","      <th>최고기온(°C)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>2024-08-06</td>\n","      <td>29.5</td>\n","      <td>25.6</td>\n","      <td>33.5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>2024-08-07</td>\n","      <td>29.6</td>\n","      <td>27.2</td>\n","      <td>33.4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>2024-08-08</td>\n","      <td>28.5</td>\n","      <td>26.9</td>\n","      <td>31.6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>2024-08-09</td>\n","      <td>29.3</td>\n","      <td>25.6</td>\n","      <td>33.6</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>2024-08-10</td>\n","      <td>30.0</td>\n","      <td>26.4</td>\n","      <td>33.6</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-017366de-8b91-4783-812f-32e8210726a2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-017366de-8b91-4783-812f-32e8210726a2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-017366de-8b91-4783-812f-32e8210726a2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8943d318-27d3-4254-9311-c5acb12ce3c2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8943d318-27d3-4254-9311-c5acb12ce3c2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8943d318-27d3-4254-9311-c5acb12ce3c2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df3","summary":"{\n  \"name\": \"df3\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"\\uc9c0\\uc810\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 108,\n        \"max\": 108,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          108\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc9c0\\uc810\\uba85\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\uc11c\\uc6b8\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc77c\\uc2dc\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"2024-08-06\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud3c9\\uade0\\uae30\\uc628(\\u00b0C)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7626707459098369,\n        \"min\": 28.5,\n        \"max\": 30.8,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          29.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd5c\\uc800\\uae30\\uc628(\\u00b0C)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8863783992554566,\n        \"min\": 25.6,\n        \"max\": 27.8,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          27.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd5c\\uace0\\uae30\\uc628(\\u00b0C)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9289779329994866,\n        \"min\": 31.6,\n        \"max\": 34.4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          33.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df1.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GgiPi6usUD1U","executionInfo":{"status":"ok","timestamp":1723524464412,"user_tz":-540,"elapsed":7,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"c717141d-06e7-4fa7-b7a3-7c50462020f7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['날짜', '지점', '평균기온(℃)', '최저기온(℃)', '최고기온(℃)'], dtype='object')"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df1.columns = ['일시','지점','평균기온(℃)','최저기온(℃)','최고기온(℃)']\n","df1['지점명'] = '서울'\n","df1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"eiN-ZR7DUXc0","executionInfo":{"status":"ok","timestamp":1723524464412,"user_tz":-540,"elapsed":6,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"14ed797b-1306-4195-aab8-a84a187f8b82"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           일시   지점  평균기온(℃)  최저기온(℃)  최고기온(℃) 지점명\n","0  1907-10-01  108     13.5      7.9     20.7  서울\n","1  1907-10-02  108     16.2      7.9     22.0  서울\n","2  1907-10-03  108     16.2     13.1     21.3  서울\n","3  1907-10-04  108     16.5     11.2     22.0  서울\n","4  1907-10-05  108     17.6     10.9     25.4  서울"],"text/html":["\n","  <div id=\"df-80e363d4-ea5f-48ff-a234-2ab9f33e4121\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>일시</th>\n","      <th>지점</th>\n","      <th>평균기온(℃)</th>\n","      <th>최저기온(℃)</th>\n","      <th>최고기온(℃)</th>\n","      <th>지점명</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1907-10-01</td>\n","      <td>108</td>\n","      <td>13.5</td>\n","      <td>7.9</td>\n","      <td>20.7</td>\n","      <td>서울</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1907-10-02</td>\n","      <td>108</td>\n","      <td>16.2</td>\n","      <td>7.9</td>\n","      <td>22.0</td>\n","      <td>서울</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1907-10-03</td>\n","      <td>108</td>\n","      <td>16.2</td>\n","      <td>13.1</td>\n","      <td>21.3</td>\n","      <td>서울</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1907-10-04</td>\n","      <td>108</td>\n","      <td>16.5</td>\n","      <td>11.2</td>\n","      <td>22.0</td>\n","      <td>서울</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1907-10-05</td>\n","      <td>108</td>\n","      <td>17.6</td>\n","      <td>10.9</td>\n","      <td>25.4</td>\n","      <td>서울</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80e363d4-ea5f-48ff-a234-2ab9f33e4121')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-80e363d4-ea5f-48ff-a234-2ab9f33e4121 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-80e363d4-ea5f-48ff-a234-2ab9f33e4121');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-29f4b5c8-e693-4d83-88e2-fe5e315a215f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-29f4b5c8-e693-4d83-88e2-fe5e315a215f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-29f4b5c8-e693-4d83-88e2-fe5e315a215f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df1","summary":"{\n  \"name\": \"df1\",\n  \"rows\": 39926,\n  \"fields\": [\n    {\n      \"column\": \"\\uc77c\\uc2dc\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 39926,\n        \"samples\": [\n          \"1954-03-13\",\n          \"1931-10-25\",\n          \"1962-05-09\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc9c0\\uc810\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 108,\n        \"max\": 108,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          108\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud3c9\\uade0\\uae30\\uc628(\\u2103)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.664129370793443,\n        \"min\": -19.2,\n        \"max\": 33.1,\n        \"num_unique_values\": 487,\n        \"samples\": [\n          -4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd5c\\uc800\\uae30\\uc628(\\u2103)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.887584035612521,\n        \"min\": -23.1,\n        \"max\": 28.8,\n        \"num_unique_values\": 500,\n        \"samples\": [\n          -10.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd5c\\uace0\\uae30\\uc628(\\u2103)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.996620957986357,\n        \"min\": -16.3,\n        \"max\": 38.4,\n        \"num_unique_values\": 510,\n        \"samples\": [\n          36.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc9c0\\uc810\\uba85\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\uc11c\\uc6b8\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df1 = df1[['지점', '지점명','일시','평균기온(℃)', '최저기온(℃)', '최고기온(℃)']]\n","df1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"d_G2PJtBUag0","executionInfo":{"status":"ok","timestamp":1723524465013,"user_tz":-540,"elapsed":606,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"3a8fcf4e-7852-4048-d558-1b52c8a98480"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    지점 지점명          일시  평균기온(℃)  최저기온(℃)  최고기온(℃)\n","0  108  서울  1907-10-01     13.5      7.9     20.7\n","1  108  서울  1907-10-02     16.2      7.9     22.0\n","2  108  서울  1907-10-03     16.2     13.1     21.3\n","3  108  서울  1907-10-04     16.5     11.2     22.0\n","4  108  서울  1907-10-05     17.6     10.9     25.4"],"text/html":["\n","  <div id=\"df-017ec510-ed54-4a2c-93d2-2ce283268329\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>지점</th>\n","      <th>지점명</th>\n","      <th>일시</th>\n","      <th>평균기온(℃)</th>\n","      <th>최저기온(℃)</th>\n","      <th>최고기온(℃)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>1907-10-01</td>\n","      <td>13.5</td>\n","      <td>7.9</td>\n","      <td>20.7</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>1907-10-02</td>\n","      <td>16.2</td>\n","      <td>7.9</td>\n","      <td>22.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>1907-10-03</td>\n","      <td>16.2</td>\n","      <td>13.1</td>\n","      <td>21.3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>1907-10-04</td>\n","      <td>16.5</td>\n","      <td>11.2</td>\n","      <td>22.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>1907-10-05</td>\n","      <td>17.6</td>\n","      <td>10.9</td>\n","      <td>25.4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-017ec510-ed54-4a2c-93d2-2ce283268329')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-017ec510-ed54-4a2c-93d2-2ce283268329 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-017ec510-ed54-4a2c-93d2-2ce283268329');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-67bb1ef2-5252-4347-8423-3c95738ef89c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-67bb1ef2-5252-4347-8423-3c95738ef89c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-67bb1ef2-5252-4347-8423-3c95738ef89c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df1","summary":"{\n  \"name\": \"df1\",\n  \"rows\": 39926,\n  \"fields\": [\n    {\n      \"column\": \"\\uc9c0\\uc810\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 108,\n        \"max\": 108,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          108\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc9c0\\uc810\\uba85\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\uc11c\\uc6b8\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc77c\\uc2dc\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 39926,\n        \"samples\": [\n          \"1954-03-13\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud3c9\\uade0\\uae30\\uc628(\\u2103)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.664129370793443,\n        \"min\": -19.2,\n        \"max\": 33.1,\n        \"num_unique_values\": 487,\n        \"samples\": [\n          -4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd5c\\uc800\\uae30\\uc628(\\u2103)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.887584035612521,\n        \"min\": -23.1,\n        \"max\": 28.8,\n        \"num_unique_values\": 500,\n        \"samples\": [\n          -10.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd5c\\uace0\\uae30\\uc628(\\u2103)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.996620957986357,\n        \"min\": -16.3,\n        \"max\": 38.4,\n        \"num_unique_values\": 510,\n        \"samples\": [\n          36.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df1.columns = ['지점', '지점명','일시','평균기온(℃)', '최저기온(℃)', '최고기온(℃)']\n","df2.columns = ['지점', '지점명','일시','평균기온(℃)', '최저기온(℃)', '최고기온(℃)']\n","df3.columns = ['지점', '지점명','일시','평균기온(℃)', '최저기온(℃)', '최고기온(℃)']"],"metadata":{"id":"OToGzZMeVi31"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# df1,df2,df3를 concat\n","df = pd.concat([df1,df2,df3])\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"jjWzNWAVUajk","executionInfo":{"status":"ok","timestamp":1723524465014,"user_tz":-540,"elapsed":12,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"dcf58511-0636-4845-fa78-c2c6e451e53b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    지점 지점명          일시  평균기온(℃)  최저기온(℃)  최고기온(℃)\n","0  108  서울  1907-10-01     13.5      7.9     20.7\n","1  108  서울  1907-10-02     16.2      7.9     22.0\n","2  108  서울  1907-10-03     16.2     13.1     21.3\n","3  108  서울  1907-10-04     16.5     11.2     22.0\n","4  108  서울  1907-10-05     17.6     10.9     25.4"],"text/html":["\n","  <div id=\"df-b98c48dc-05b1-4340-a32b-1bf5baaafbd0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>지점</th>\n","      <th>지점명</th>\n","      <th>일시</th>\n","      <th>평균기온(℃)</th>\n","      <th>최저기온(℃)</th>\n","      <th>최고기온(℃)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>1907-10-01</td>\n","      <td>13.5</td>\n","      <td>7.9</td>\n","      <td>20.7</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>1907-10-02</td>\n","      <td>16.2</td>\n","      <td>7.9</td>\n","      <td>22.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>1907-10-03</td>\n","      <td>16.2</td>\n","      <td>13.1</td>\n","      <td>21.3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>1907-10-04</td>\n","      <td>16.5</td>\n","      <td>11.2</td>\n","      <td>22.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>1907-10-05</td>\n","      <td>17.6</td>\n","      <td>10.9</td>\n","      <td>25.4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b98c48dc-05b1-4340-a32b-1bf5baaafbd0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b98c48dc-05b1-4340-a32b-1bf5baaafbd0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b98c48dc-05b1-4340-a32b-1bf5baaafbd0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5589a554-4ad7-4f47-8464-82156e13f5ad\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5589a554-4ad7-4f47-8464-82156e13f5ad')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5589a554-4ad7-4f47-8464-82156e13f5ad button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 42255,\n  \"fields\": [\n    {\n      \"column\": \"\\uc9c0\\uc810\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 108,\n        \"max\": 108,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          108\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc9c0\\uc810\\uba85\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\uc11c\\uc6b8\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc77c\\uc2dc\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1907-10-01\",\n        \"max\": \"2024-08-11\",\n        \"num_unique_values\": 42254,\n        \"samples\": [\n          \"1967-08-17\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud3c9\\uade0\\uae30\\uc628(\\u2103)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.662361539057732,\n        \"min\": -19.2,\n        \"max\": 33.7,\n        \"num_unique_values\": 489,\n        \"samples\": [\n          29.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd5c\\uc800\\uae30\\uc628(\\u2103)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.890767089709247,\n        \"min\": -23.1,\n        \"max\": 30.3,\n        \"num_unique_values\": 505,\n        \"samples\": [\n          13.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd5c\\uace0\\uae30\\uc628(\\u2103)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.974015150421051,\n        \"min\": -16.3,\n        \"max\": 39.6,\n        \"num_unique_values\": 513,\n        \"samples\": [\n          31.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["df.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"CpdCwiFsUal8","executionInfo":{"status":"ok","timestamp":1723524465014,"user_tz":-540,"elapsed":11,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"outputId":"697487ad-a3f6-4c5e-bffb-5c3514acc998"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    지점 지점명          일시  평균기온(℃)  최저기온(℃)  최고기온(℃)\n","1  108  서울  2024-08-07     29.6     27.2     33.4\n","2  108  서울  2024-08-08     28.5     26.9     31.6\n","3  108  서울  2024-08-09     29.3     25.6     33.6\n","4  108  서울  2024-08-10     30.0     26.4     33.6\n","5  108  서울  2024-08-11     30.8     27.8     34.4"],"text/html":["\n","  <div id=\"df-d12a367b-d377-448f-a360-5d3fc558383c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>지점</th>\n","      <th>지점명</th>\n","      <th>일시</th>\n","      <th>평균기온(℃)</th>\n","      <th>최저기온(℃)</th>\n","      <th>최고기온(℃)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>2024-08-07</td>\n","      <td>29.6</td>\n","      <td>27.2</td>\n","      <td>33.4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>2024-08-08</td>\n","      <td>28.5</td>\n","      <td>26.9</td>\n","      <td>31.6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>2024-08-09</td>\n","      <td>29.3</td>\n","      <td>25.6</td>\n","      <td>33.6</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>2024-08-10</td>\n","      <td>30.0</td>\n","      <td>26.4</td>\n","      <td>33.6</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>108</td>\n","      <td>서울</td>\n","      <td>2024-08-11</td>\n","      <td>30.8</td>\n","      <td>27.8</td>\n","      <td>34.4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d12a367b-d377-448f-a360-5d3fc558383c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d12a367b-d377-448f-a360-5d3fc558383c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d12a367b-d377-448f-a360-5d3fc558383c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6972690a-4f8e-4400-8257-a00b3d7c1373\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6972690a-4f8e-4400-8257-a00b3d7c1373')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6972690a-4f8e-4400-8257-a00b3d7c1373 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"0"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# 질문 : 결측치가 있는 기간이 있는데 기간이 어떻게 되는가?\n","# 질문2 : 1907~2024년간 평균기온이 상승하는가? 상승한다면 얼마나 상승했는가?\n","# 질문3 : 가능하다면 그래프로 표현 cf) 1907,1927,1947\n","# 질문4 : 1907~2024년간 겨울의 최저기온, 여름의 최고 기온은 언제인가?"],"metadata":{"id":"6lN8ufuoVXfd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["nullList=df[df.isnull().any(axis=1)].index.tolist()\n","nullList"],"metadata":{"id":"4sz9DlEIe7hf","executionInfo":{"status":"ok","timestamp":1723524550974,"user_tz":-540,"elapsed":426,"user":{"displayName":"안정윤","userId":"15073123616001155353"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"98317de6-933a-4ebe-9a4f-1ec297272773"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[15676,\n"," 15677,\n"," 15678,\n"," 15679,\n"," 15680,\n"," 15681,\n"," 15682,\n"," 15683,\n"," 15684,\n"," 15685,\n"," 15686,\n"," 15687,\n"," 15688,\n"," 15689,\n"," 15690,\n"," 15691,\n"," 15692,\n"," 15693,\n"," 15694,\n"," 15695,\n"," 15696,\n"," 15697,\n"," 15698,\n"," 15699,\n"," 15700,\n"," 15701,\n"," 15702,\n"," 15703,\n"," 15704,\n"," 15705,\n"," 15706,\n"," 15707,\n"," 15708,\n"," 15709,\n"," 15710,\n"," 15711,\n"," 15712,\n"," 15713,\n"," 15714,\n"," 15715,\n"," 15716,\n"," 15717,\n"," 15718,\n"," 15719,\n"," 15720,\n"," 15721,\n"," 15722,\n"," 15723,\n"," 15724,\n"," 15725,\n"," 15726,\n"," 15727,\n"," 15728,\n"," 15729,\n"," 15730,\n"," 15731,\n"," 15732,\n"," 15733,\n"," 15734,\n"," 15735,\n"," 15736,\n"," 15737,\n"," 15738,\n"," 15739,\n"," 15740,\n"," 15741,\n"," 15742,\n"," 15743,\n"," 15744,\n"," 15745,\n"," 15746,\n"," 15747,\n"," 15748,\n"," 15749,\n"," 15750,\n"," 15751,\n"," 15752,\n"," 15753,\n"," 15754,\n"," 15755,\n"," 15756,\n"," 15757,\n"," 15758,\n"," 15759,\n"," 15760,\n"," 15761,\n"," 15762,\n"," 15763,\n"," 15764,\n"," 15765,\n"," 15766,\n"," 15767,\n"," 15768,\n"," 15769,\n"," 15770,\n"," 15771,\n"," 15772,\n"," 15773,\n"," 15774,\n"," 15775,\n"," 15776,\n"," 15777,\n"," 15778,\n"," 15779,\n"," 15780,\n"," 15781,\n"," 15782,\n"," 15783,\n"," 15784,\n"," 15785,\n"," 15786,\n"," 15787,\n"," 15788,\n"," 15789,\n"," 15790,\n"," 15791,\n"," 15792,\n"," 15793,\n"," 15794,\n"," 15795,\n"," 15796,\n"," 15797,\n"," 15798,\n"," 15799,\n"," 15800,\n"," 15801,\n"," 15802,\n"," 15803,\n"," 15804,\n"," 15805,\n"," 15806,\n"," 15807,\n"," 15808,\n"," 15809,\n"," 15810,\n"," 15811,\n"," 15812,\n"," 15813,\n"," 15814,\n"," 15815,\n"," 15816,\n"," 15817,\n"," 15818,\n"," 15819,\n"," 15820,\n"," 15821,\n"," 15822,\n"," 15823,\n"," 15824,\n"," 15825,\n"," 15826,\n"," 15827,\n"," 15828,\n"," 15829,\n"," 15830,\n"," 15831,\n"," 15832,\n"," 15833,\n"," 15834,\n"," 15835,\n"," 15836,\n"," 15837,\n"," 15838,\n"," 15839,\n"," 15840,\n"," 15841,\n"," 15842,\n"," 15843,\n"," 15844,\n"," 15845,\n"," 15846,\n"," 15847,\n"," 15848,\n"," 15849,\n"," 15850,\n"," 15851,\n"," 15852,\n"," 15853,\n"," 15854,\n"," 15855,\n"," 15856,\n"," 15857,\n"," 15858,\n"," 15859,\n"," 15860,\n"," 15861,\n"," 15862,\n"," 15863,\n"," 15864,\n"," 15865,\n"," 15866,\n"," 15867,\n"," 15868,\n"," 15869,\n"," 15870,\n"," 15871,\n"," 15872,\n"," 15873,\n"," 15874,\n"," 15875,\n"," 15876,\n"," 15877,\n"," 15878,\n"," 15879,\n"," 15880,\n"," 15881,\n"," 15882,\n"," 15883,\n"," 15884,\n"," 15885,\n"," 15886,\n"," 15887,\n"," 15888,\n"," 15889,\n"," 15890,\n"," 15891,\n"," 15892,\n"," 15893,\n"," 15894,\n"," 15895,\n"," 15896,\n"," 15897,\n"," 15898,\n"," 15899,\n"," 15900,\n"," 15901,\n"," 15902,\n"," 15903,\n"," 15904,\n"," 15905,\n"," 15906,\n"," 15907,\n"," 15908,\n"," 15909,\n"," 15910,\n"," 15911,\n"," 15912,\n"," 15913,\n"," 15914,\n"," 15915,\n"," 15916,\n"," 15917,\n"," 15918,\n"," 15919,\n"," 15920,\n"," 15921,\n"," 15922,\n"," 15923,\n"," 15924,\n"," 15925,\n"," 15926,\n"," 15927,\n"," 15928,\n"," 15929,\n"," 15930,\n"," 15931,\n"," 15932,\n"," 15933,\n"," 15934,\n"," 15935,\n"," 15936,\n"," 15937,\n"," 15938,\n"," 15939,\n"," 15940,\n"," 15941,\n"," 15942,\n"," 15943,\n"," 15944,\n"," 15945,\n"," 15946,\n"," 15947,\n"," 15948,\n"," 15949,\n"," 15950,\n"," 15951,\n"," 15952,\n"," 15953,\n"," 15954,\n"," 15955,\n"," 15956,\n"," 15957,\n"," 15958,\n"," 15959,\n"," 15960,\n"," 15961,\n"," 15962,\n"," 15963,\n"," 15964,\n"," 15965,\n"," 15966,\n"," 15967,\n"," 15968,\n"," 15969,\n"," 15970,\n"," 15971,\n"," 15972,\n"," 15973,\n"," 15974,\n"," 15975,\n"," 15976,\n"," 15977,\n"," 15978,\n"," 15979,\n"," 15980,\n"," 15981,\n"," 15982,\n"," 15983,\n"," 15984,\n"," 15985,\n"," 15986,\n"," 15987,\n"," 15988,\n"," 15989,\n"," 15990,\n"," 15991,\n"," 15992,\n"," 15993,\n"," 15994,\n"," 15995,\n"," 15996,\n"," 15997,\n"," 15998,\n"," 15999,\n"," 16000,\n"," 16001,\n"," 16002,\n"," 16003,\n"," 16004,\n"," 16005,\n"," 16006,\n"," 16007,\n"," 16008,\n"," 16009,\n"," 16010,\n"," 16011,\n"," 16012,\n"," 16013,\n"," 16014,\n"," 16015,\n"," 16016,\n"," 16017,\n"," 16018,\n"," 16019,\n"," 16020,\n"," 16021,\n"," 16022,\n"," 16023,\n"," 16024,\n"," 16025,\n"," 16026,\n"," 16027,\n"," 16028,\n"," 16029,\n"," 16030,\n"," 16031,\n"," 16032,\n"," 16033,\n"," 16034,\n"," 16035,\n"," 16036,\n"," 16037,\n"," 16038,\n"," 16039,\n"," 16040,\n"," 16041,\n"," 16042,\n"," 16043,\n"," 16044,\n"," 16045,\n"," 16046,\n"," 16047,\n"," 16048,\n"," 16049,\n"," 16050,\n"," 16051,\n"," 16052,\n"," 16053,\n"," 16054,\n"," 16055,\n"," 16056,\n"," 16057,\n"," 16058,\n"," 16059,\n"," 16060,\n"," 16061,\n"," 16062,\n"," 16063,\n"," 16064,\n"," 16065,\n"," 16066,\n"," 16067,\n"," 16068,\n"," 16069,\n"," 16070,\n"," 16071,\n"," 16072,\n"," 16073,\n"," 16074,\n"," 16075,\n"," 16076,\n"," 16077,\n"," 16078,\n"," 16079,\n"," 16080,\n"," 16081,\n"," 16082,\n"," 16083,\n"," 16084,\n"," 16085,\n"," 16086,\n"," 16087,\n"," 16088,\n"," 16089,\n"," 16090,\n"," 16091,\n"," 16092,\n"," 16093,\n"," 16094,\n"," 16095,\n"," 16096,\n"," 16097,\n"," 16098,\n"," 16099,\n"," 16100,\n"," 16101,\n"," 16102,\n"," 16103,\n"," 16104,\n"," 16105,\n"," 16106,\n"," 16107,\n"," 16108,\n"," 16109,\n"," 16110,\n"," 16111,\n"," 16112,\n"," 16113,\n"," 16114,\n"," 16115,\n"," 16116,\n"," 16117,\n"," 16118,\n"," 16119,\n"," 16120,\n"," 16121,\n"," 16122,\n"," 16123,\n"," 16124,\n"," 16125,\n"," 16126,\n"," 16127,\n"," 16128,\n"," 16129,\n"," 16130,\n"," 16131,\n"," 16132,\n"," 16133,\n"," 16134,\n"," 16135,\n"," 16136,\n"," 16137,\n"," 16138,\n"," 16139,\n"," 16140,\n"," 16141,\n"," 16142,\n"," 16143,\n"," 16144,\n"," 16145,\n"," 16146,\n"," 16147,\n"," 16148,\n"," 16149,\n"," 16150,\n"," 16151,\n"," 16152,\n"," 16153,\n"," 16154,\n"," 16155,\n"," 16156,\n"," 16157,\n"," 16158,\n"," 16159,\n"," 16160,\n"," 16161,\n"," 16162,\n"," 16163,\n"," 16164,\n"," 16165,\n"," 16166,\n"," 16167,\n"," 16168,\n"," 16169,\n"," 16170,\n"," 16171,\n"," 16172,\n"," 16173,\n"," 16174,\n"," 16175,\n"," 16176,\n"," 16177,\n"," 16178,\n"," 16179,\n"," 16180,\n"," 16181,\n"," 16182,\n"," 16183,\n"," 16184,\n"," 16185,\n"," 16186,\n"," 16187,\n"," 16188,\n"," 16189,\n"," 16190,\n"," 16191,\n"," 16192,\n"," 16193,\n"," 16194,\n"," 16195,\n"," 16196,\n"," 16197,\n"," 16198,\n"," 16199,\n"," 16200,\n"," 16201,\n"," 16202,\n"," 16203,\n"," 16204,\n"," 16205,\n"," 16206,\n"," 16207,\n"," 16208,\n"," 16209,\n"," 16210,\n"," 16211,\n"," 16212,\n"," 16213,\n"," 16214,\n"," 16215,\n"," 16216,\n"," 16217,\n"," 16218,\n"," 16219,\n"," 16220,\n"," 16221,\n"," 16222,\n"," 16223,\n"," 16224,\n"," 16225,\n"," 16226,\n"," 16227,\n"," 16228,\n"," 16229,\n"," 16230,\n"," 16231,\n"," 16232,\n"," 16233,\n"," 16234,\n"," 16235,\n"," 16236,\n"," 16237,\n"," 16238,\n"," 16239,\n"," 16240,\n"," 16241,\n"," 16242,\n"," 16243,\n"," 16244,\n"," 16245,\n"," 16246,\n"," 16247,\n"," 16248,\n"," 16249,\n"," 16250,\n"," 16251,\n"," 16252,\n"," 16253,\n"," 16254,\n"," 16255,\n"," 16256,\n"," 16257,\n"," 16258,\n"," 16259,\n"," 16260,\n"," 16261,\n"," 16262,\n"," 16263,\n"," 16264,\n"," 16265,\n"," 16266,\n"," 16267,\n"," 16268,\n"," 16269,\n"," 16270,\n"," 16271,\n"," 16272,\n"," 16273,\n"," 16274,\n"," 16275,\n"," 16276,\n"," 16277,\n"," 16278,\n"," 16279,\n"," 16280,\n"," 16281,\n"," 16282,\n"," 16283,\n"," 16284,\n"," 16285,\n"," 16286,\n"," 16287,\n"," 16288,\n"," 16289,\n"," 16290,\n"," 16291,\n"," 16292,\n"," 16293,\n"," 16294,\n"," 16295,\n"," 16296,\n"," 16297,\n"," 16298,\n"," 16299,\n"," 16300,\n"," 16301,\n"," 16302,\n"," 16303,\n"," 16304,\n"," 16305,\n"," 16306,\n"," 16307,\n"," 16308,\n"," 16309,\n"," 16310,\n"," 16311,\n"," 16312,\n"," 16313,\n"," 16314,\n"," 16315,\n"," 16316,\n"," 16317,\n"," 16318,\n"," 16319,\n"," 16320,\n"," 16321,\n"," 16322,\n"," 16323,\n"," 16324,\n"," 16325,\n"," 16326,\n"," 16327,\n"," 16328,\n"," 16329,\n"," 16330,\n"," 16331,\n"," 16332,\n"," 16333,\n"," 16334,\n"," 16335,\n"," 16336,\n"," 16337,\n"," 16338,\n"," 16339,\n"," 16340,\n"," 16341,\n"," 16342,\n"," 16343,\n"," 16344,\n"," 16345,\n"," 16346,\n"," 16347,\n"," 16348,\n"," 16349,\n"," 16350,\n"," 16351,\n"," 16352,\n"," 16353,\n"," 16354,\n"," 16355,\n"," 16356,\n"," 16357,\n"," 16358,\n"," 16359,\n"," 16360,\n"," 16361,\n"," 16362,\n"," 16363,\n"," 16364,\n"," 16365,\n"," 16366,\n"," 16367,\n"," 16368,\n"," 16369,\n"," 16370,\n"," 16371,\n"," 16372,\n"," 16373,\n"," 16374,\n"," 16375,\n"," 16376,\n"," 16377,\n"," 16378,\n"," 16379,\n"," 16380,\n"," 16381,\n"," 16382,\n"," 16383,\n"," 16384,\n"," 16385,\n"," 16386,\n"," 16387,\n"," 16388,\n"," 16389,\n"," 16390,\n"," 16391,\n"," 16392,\n"," 16393,\n"," 16394,\n"," 16395,\n"," 16396,\n"," 16397,\n"," 16398,\n"," 16399,\n"," 16400,\n"," 16401,\n"," 16402,\n"," 16403,\n"," 16404,\n"," 16405,\n"," 16406,\n"," 16407,\n"," 16408,\n"," 16409,\n"," 16410,\n"," 16411,\n"," 16412,\n"," 16413,\n"," 16414,\n"," 16415,\n"," 16416,\n"," 16417,\n"," 16418,\n"," 16419,\n"," 16420,\n"," 16421,\n"," 16422,\n"," 16423,\n"," 16424,\n"," 16425,\n"," 16426,\n"," 16427,\n"," 16428,\n"," 16429,\n"," 16430,\n"," 16431,\n"," 21260,\n"," 39758,\n"," 1593]"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":[],"metadata":{"id":"Io-Cd4yWe_Q_"},"execution_count":null,"outputs":[]}]}